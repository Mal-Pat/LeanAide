def replacePairs := #[("partrec" , "Partrec") , ("bind" , "Bind") , ("pmf" , "Pmf") , ("transcendental" , "Transcendental") , ("normal" , "Normal") , ("quotient" , "Quotient") , ("closure" , "Closure") , ("subset" , "Subset") , ("cont" , "Cont") , ("balanced" , "Balanced") , ("subalgebra" , "Subalgebra") , ("prime" , "Prime") , ("opposite" , "Opposite") , ("absorbent" , "Absorbent") , ("id" , "Id") , ("false" , "False") , ("pfunctor" , "Pfunctor") , ("erased" , "Erased") , ("localization" , "Localization") , ("sigma" , "Sigma") , ("conformal" , "Conformal") , ("cardinal" , "Cardinal") , ("interior" , "Interior") , ("padic" , "Padic") , ("spectrum" , "Spectrum") , ("quandle" , "Quandle") , ("commute" , "Commute") , ("rep" , "Rep") , ("subfield" , "Subfield") , ("and" , "And") , ("preorder" , "Preorder") , ("born" , "Born") , ("tc" , "Tc") , ("inv" , "Inv") , ("reflexive" , "Reflexive") , ("valuation" , "Valuation") , ("seq" , "Seq") , ("group" , "Group") , ("language" , "Language") , ("quot" , "Quot") , ("ideal" , "Ideal") , ("prod" , "Prod") , ("subadditive" , "Subadditive") , ("quiver" , "Quiver") , ("inseparable" , "Inseparable") , ("dense" , "Dense") , ("name" , "Name") , ("subsemigroup" , "Subsemigroup") , ("directed" , "Directed") , ("fact" , "Fact") , ("shelf" , "Shelf") , ("finsupp" , "Finsupp") , ("l_mul" , "L_mul") , ("finite" , "Finite") , ("iff" , "Iff") , ("subsingleton" , "Subsingleton") , ("filter" , "Filter") , ("subspace" , "Subspace") , ("add" , "Add") , ("mon" , "Mon") , ("multiset" , "Multiset") , ("representation" , "Representation") , ("irreflexive" , "Irreflexive") , ("exists" , "Exists") , ("small" , "Small") , ("append" , "Append") , ("submodule" , "Submodule") , ("rack" , "Rack") , ("separated" , "Separated") , ("dfinsupp" , "Dfinsupp") , ("subring" , "Subring") , ("rat" , "Rat") , ("field" , "Field") , ("ordering" , "Ordering") , ("projectivization" , "Projectivization") , ("smooth" , "Smooth") , ("basis" , "Basis") , ("mvqpf" , "Mvqpf") , ("pnat" , "Pnat") , ("multiples" , "Multiples") , ("con" , "Con") , ("enat" , "Enat") , ("associative" , "Associative") , ("frame" , "Frame") , ("cauchy" , "Cauchy") , ("inhabited" , "Inhabited") , ("dioph" , "Dioph") , ("contravariant" , "Contravariant") , ("irrational" , "Irrational") , ("nonempty" , "Nonempty") , ("derivation" , "Derivation") , ("nnreal" , "Nnreal") , ("ennreal" , "Ennreal") , ("odd" , "Odd") , ("mvpfunctor" , "Mvpfunctor") , ("lattice" , "Lattice") , ("pow" , "Pow") , ("list" , "List") , ("mon_" , "Mon_") , ("gt" , "Gt") , ("unit" , "Unit") , ("summable" , "Summable") , ("true" , "True") , ("distrib" , "Distrib") , ("transitive" , "Transitive") , ("game" , "Game") , ("computable" , "Computable") , ("joined" , "Joined") , ("empty" , "Empty") , ("holor" , "Holor") , ("ereal" , "Ereal") , ("differentiable" , "Differentiable") , ("trans" , "Trans") , ("semiring" , "Semiring") , ("powers" , "Powers") , ("meas" , "Meas") , ("fin" , "Fin") , ("sum" , "Sum") , ("implies" , "Implies") , ("pfun" , "Pfun") , ("collinear" , "Collinear") , ("irreducible" , "Irreducible") , ("matrix" , "Matrix") , ("zmod" , "Zmod") , ("vector" , "Vector") , ("composition" , "Composition") , ("absorbs" , "Absorbs") , ("fintype" , "Fintype") , ("cycle" , "Cycle") , ("nontrivial" , "Nontrivial") , ("ordinal" , "Ordinal") , ("r_mul" , "R_mul") , ("complex" , "Complex") , ("ab" , "Ab") , ("structomorph" , "Structomorph") , ("denumerable" , "Denumerable") , ("monotone" , "Monotone") , ("even" , "Even") , ("archimedean" , "Archimedean") , ("convex" , "Convex") , ("num" , "Num") , ("squarefree" , "Squarefree") , ("pos" , "Pos") , ("isometry" , "Isometry") , ("typevec" , "Typevec") , ("finset" , "Finset") , ("functor" , "Functor") , ("total" , "Total") , ("units" , "Units") , ("pairwise" , "Pairwise") , ("minimals" , "Minimals") , ("seminorm" , "Seminorm") , ("orthonormal" , "Orthonormal") , ("quaternion" , "Quaternion") , ("measure" , "Measure") , ("decidable" , "Decidable") , ("mul" , "Mul") , ("pgame" , "Pgame") , ("unique" , "Unique") , ("sub" , "Sub") , ("shrink" , "Shrink") , ("algebra" , "Algebra") , ("frontier" , "Frontier") , ("monoid" , "Monoid") , ("neg" , "Neg") , ("homotopic" , "Homotopic") , ("embedding" , "Embedding") , ("action" , "Action") , ("semigroup" , "Semigroup") , ("buffer" , "Buffer") , ("maximals" , "Maximals") , ("pequiv" , "Pequiv") , ("encodable" , "Encodable") , ("sym" , "Sym") , ("antivary" , "Antivary") , ("bornology" , "Bornology") , ("dvd" , "Dvd") , ("trunc" , "Trunc") , ("nonunits" , "Nonunits") , ("mvfunctor" , "Mvfunctor") , ("div" , "Div") , ("real" , "Real") , ("associated" , "Associated") , ("tree" , "Tree") , ("flow" , "Flow") , ("option" , "Option") , ("one" , "One") , ("coe" , "Coe") , ("zero" , "Zero") , ("continuous" , "Continuous") , ("lex" , "Lex") , ("eq" , "Eq") , ("orientation" , "Orientation") , ("symmetric" , "Symmetric") , ("ratfunc" , "Ratfunc") , ("parser" , "Parser") , ("inducing" , "Inducing") , ("pempty" , "Pempty") , ("acc" , "Acc") , ("subsemiring" , "Subsemiring") , ("submonoid" , "Submonoid") , ("rand" , "Rand") , ("primrec" , "Primrec") , ("pointed" , "Pointed") , ("associates" , "Associates") , ("antitone" , "Antitone") , ("rel" , "Rel") , ("setoid" , "Setoid") , ("unitization" , "Unitization") , ("antisymm" , "Antisymm") , ("homeomorph" , "Homeomorph") , ("squash" , "Squash") , ("poly" , "Poly") , ("part" , "Part") , ("nat" , "Nat") , ("lists" , "Lists") , ("bool" , "Bool") , ("array" , "Array") , ("invertible" , "Invertible") , ("measurable" , "Measurable") , ("liouville" , "Liouville") , ("segment" , "Segment") , ("disjoint" , "Disjoint") , ("polynomial" , "Polynomial") , ("subtype" , "Subtype") , ("ord" , "Ord") , ("additive" , "Additive") , ("arity" , "Arity") , ("ge" , "Ge") , ("covariant" , "Covariant") , ("qpf" , "Qpf") , ("pure" , "Pure") , ("complement" , "Complement") , ("subgroup" , "Subgroup") , ("monovary" , "Monovary") , ("finpartition" , "Finpartition") , ("multiplicative" , "Multiplicative") , ("mdifferentiable" , "Mdifferentiable") , ("ne" , "Ne") , ("commutative" , "Commutative") , ("ultrafilter" , "Ultrafilter") , ("stream" , "Stream") , ("not" , "Not") , ("infinite" , "Infinite") , ("equiv" , "Equiv") , ("path" , "Path"), ("ring", "Ring")]

def mkCap(s: String) :=
  replacePairs.foldl (fun acc (a, b) => acc.replace a b) (s)

-- #eval mkCap "this is a group ring"
