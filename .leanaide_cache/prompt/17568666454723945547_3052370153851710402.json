[["The element of G ",{"type":"{N : Type u_1} → {G : Type u_2} → [inst : Group N] → [inst_1 : Group G] → {φ : G →* MulAut N} → N ⋊[φ] G → G","name":"SemidirectProduct.right","isProp":false,"docString":"The element of G ","distance":0.386648652067268228105234584290883503854274749755859375}],[" For any real number T > 0 and any function f from the additive circle of T to a normed additive commutative group with a real normed space, the integral of f over (t, t + T] equals the integral of its restriction to the additive circle of T.",{"type":"∀ (T : ℝ) [hT : Fact (0 < T)] {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] (t : ℝ)\n  (f : AddCircle T → E), ∫ (a : ℝ) in t..t + T, f ↑a = ∫ (b : AddCircle T), f b","name":"AddCircle.intervalIntegral_preimage","isProp":true,"docString":" For any real number T > 0 and any function f from the additive circle of T to a normed additive commutative group with a real normed space, the integral of f over (t, t + T] equals the integral of its restriction to the additive circle of T.","distance":0.447402299376888523685380505412467755377292633056640625}],["This theorem states that for any type `X` equipped with a topological space structure, a set `s` of `X`, and a proposition `p` about elements of `X`, the proposition `p` holds true eventually in the neighborhood filter of the set `s` if and only if there exists a larger open set `t` that contains `s` and the proposition `p` holds true for all elements in `t`. In other words, we can say that a property being true \"eventually\" in the neighborhood of a set `s` is equivalent to the property being true for all elements of a larger open set that contains `s`. This is a fundamental concept in topology and is used to formalize the notion of continuity and limit.",{"type":"∀ {X : Type u_1} [inst : TopologicalSpace X] {s : Set X} {p : X → Prop},\n  (∀ᶠ (x : X) in nhdsSet s, p x) ↔ ∃ t, IsOpen t ∧ s ⊆ t ∧ ∀ x ∈ t, p x","name":"eventually_nhdsSet_iff_exists","isProp":true,"docString":"This theorem states that for any type `X` equipped with a topological space structure, a set `s` of `X`, and a proposition `p` about elements of `X`, the proposition `p` holds true eventually in the neighborhood filter of the set `s` if and only if there exists a larger open set `t` that contains `s` and the proposition `p` holds true for all elements in `t`. In other words, we can say that a property being true \"eventually\" in the neighborhood of a set `s` is equivalent to the property being true for all elements of a larger open set that contains `s`. This is a fundamental concept in topology and is used to formalize the notion of continuity and limit.","distance":0.45000883050803219820323874955647625029087066650390625}],["The `t` coefficient of an admissible linear change of variables. ",{"type":"{R : Type u} → [inst : CommRing R] → WeierstrassCurve.VariableChange R → R","name":"WeierstrassCurve.VariableChange.t","isProp":false,"docString":"The `t` coefficient of an admissible linear change of variables. ","distance":0.390978437694485647657671734123141504824161529541015625}],[" If T is a continuous, self-adjoint linear map between two normed, additive commutative groups and inner product spaces E and F, then the composition of T with any continuous linear map S from E to F and the adjoint of S is also a self-adjoint linear map.",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} [inst : RCLike 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : InnerProductSpace 𝕜 E] [inst_4 : InnerProductSpace 𝕜 F]\n  [inst_5 : CompleteSpace E] [inst_6 : CompleteSpace F] {T : E →L[𝕜] E},\n  IsSelfAdjoint T → ∀ (S : E →L[𝕜] F), IsSelfAdjoint (S.comp (T.comp (ContinuousLinearMap.adjoint S)))","name":"IsSelfAdjoint.conj_adjoint","isProp":true,"docString":" If T is a continuous, self-adjoint linear map between two normed, additive commutative groups and inner product spaces E and F, then the composition of T with any continuous linear map S from E to F and the adjoint of S is also a self-adjoint linear map.","distance":0.459784554936721601148263971481355838477611541748046875}],["This theorem states that if a function `f` from the reals to a normed additively commutative group `E` is periodic with a positive period `T`, then the integral of `f` over any interval of length `T` is the same, regardless of where that interval starts. More formally, for any real numbers `t` and `s`, the integral of `f` from `t` to `t + T` is equal to the integral of `f` from `s` to `s + T`.",{"type":"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E} {T : ℝ},\n  Function.Periodic f T → 0 < T → ∀ (t s : ℝ), ∫ (x : ℝ) in t..t + T, f x = ∫ (x : ℝ) in s..s + T, f x","name":"Function.Periodic.intervalIntegral_add_eq_of_pos","isProp":true,"docString":"This theorem states that if a function `f` from the reals to a normed additively commutative group `E` is periodic with a positive period `T`, then the integral of `f` over any interval of length `T` is the same, regardless of where that interval starts. More formally, for any real numbers `t` and `s`, the integral of `f` from `t` to `t + T` is equal to the integral of `f` from `s` to `s + T`.","distance":0.457570494774631075785009670653380453586578369140625}],["The underlying topological space is T2.",{"type":"∀ (self : CompHaus), T2Space ↑self.toTop","name":"CompHaus.is_hausdorff","isProp":true,"docString":"The underlying topological space is T2.","distance":0.394080481983849484350912462105043232440948486328125}],["This is (-)^A. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    (A : C) →\n      [inst_1 : CategoryTheory.Limits.HasFiniteProducts C] →\n        [inst_2 : CategoryTheory.Exponentiable A] → CategoryTheory.Functor C C","name":"CategoryTheory.exp","isProp":false,"docString":"This is (-)^A. ","distance":0.394911661533455193850983278025523759424686431884765625}],["Taylor's formula. ",{"type":"∀ {R : Type u_2} [inst : CommRing R] (f : Polynomial R) (r : R),\n  (Polynomial.sum ((Polynomial.taylor r) f) fun i a => Polynomial.C a * (Polynomial.X - Polynomial.C r) ^ i) = f","name":"Polynomial.sum_taylor_eq","isProp":true,"docString":"Taylor's formula. ","distance":0.395584025115002624328752744986559264361858367919921875}],["The basis of M. ",{"type":"{R : Type u_2} →\n  [inst : CommRing R] →\n    {M : Type u_3} →\n      [inst_1 : AddCommGroup M] →\n        [inst_2 : Module R M] →\n          {N : Submodule R M} → {ι : Type u_4} → {n : ℕ} → Basis.SmithNormalForm N ι n → Basis ι R M","name":"Basis.SmithNormalForm.bM","isProp":false,"docString":"The basis of M. ","distance":0.39611491796712561264115493031567893922328948974609375}],["an arrow ",{"type":"{V : Type u} → [inst : Quiver V] → (self : Quiver.Total V) → self.left ⟶ self.right","name":"Quiver.Total.hom","isProp":false,"docString":"an arrow ","distance":0.39888245625014040474098919730749912559986114501953125}],["tensorator ",{"type":"{C : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} C] →\n    [inst_1 : CategoryTheory.MonoidalCategory C] →\n      {D : Type u₂} →\n        [inst_2 : CategoryTheory.Category.{v₂, u₂} D] →\n          [inst_3 : CategoryTheory.MonoidalCategory D] →\n            {F : C → D} →\n              [inst_4 : CategoryTheory.Functorial F] →\n                [self : CategoryTheory.LaxMonoidal F] →\n                  (X Y : C) →\n                    CategoryTheory.MonoidalCategory.tensorObj (F X) (F Y) ⟶\n                      F (CategoryTheory.MonoidalCategory.tensorObj X Y)","name":"CategoryTheory.LaxMonoidal.μ","isProp":false,"docString":"tensorator ","distance":0.40046304354277062476086257447605021297931671142578125}],["The Gram operator T†T is symmetric. ",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  [inst_3 : FiniteDimensional 𝕜 E] (T : E →ₗ[𝕜] E), LinearMap.IsSymmetric (LinearMap.adjoint T * T)","name":"LinearMap.isSymmetric_adjoint_mul_self","isProp":true,"docString":"The Gram operator T†T is symmetric. ","distance":0.402993551860911070061632699434994719922542572021484375}],["the equivalence given by multiplication on the left by `t`  ",{"type":"{G : Type u_1} →\n  [inst : Group G] →\n    {A B : Subgroup G} →\n      ↥A ≃* ↥B →\n        {d : HNNExtension.NormalWord.TransversalPair G A B} → HNNExtension.NormalWord d ≃ HNNExtension.NormalWord d","name":"HNNExtension.NormalWord.unitsSMulEquiv","isProp":false,"docString":"the equivalence given by multiplication on the left by `t`  ","distance":0.403598574294746270663125642386148683726787567138671875}],["The Gram operator T†T is a positive operator. ",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  [inst_3 : FiniteDimensional 𝕜 E] (T : E →ₗ[𝕜] E) (x : E), 0 ≤ IsROrC.re ⟪x, (LinearMap.adjoint T * T) x⟫_𝕜","name":"LinearMap.re_inner_adjoint_mul_self_nonneg","isProp":true,"docString":"The Gram operator T†T is a positive operator. ","distance":0.405340184796150915236268019725685007870197296142578125}],["Two inseparable points in a T₀ space are equal. ",{"type":"∀ {X : Type u} [inst : TopologicalSpace X] [self : T0Space X] ⦃x y : X⦄, Inseparable x y → x = y","name":"T0Space.t0","isProp":true,"docString":"Two inseparable points in a T₀ space are equal. ","distance":0.406795043327755345696772337760194204747676849365234375}],["The basis of N. ",{"type":"{R : Type u_2} →\n  [inst : CommRing R] →\n    {M : Type u_3} →\n      [inst_1 : AddCommGroup M] →\n        [inst_2 : Module R M] →\n          {N : Submodule R M} → {ι : Type u_4} → {n : ℕ} → Basis.SmithNormalForm N ι n → Basis (Fin n) R ↥N","name":"Basis.SmithNormalForm.bN","isProp":false,"docString":"The basis of N. ","distance":0.408947841019345725843692207490676082670688629150390625}],["W-types are functorial ",{"type":"{n : ℕ} → (P : MvPFunctor.{u} (n + 1)) → {α β : TypeVec.{u} n} → TypeVec.Arrow α β → MvPFunctor.W P α → MvPFunctor.W P β","name":"MvPFunctor.wMap","isProp":false,"docString":"W-types are functorial ","distance":0.4091062339319695428940804049489088356494903564453125}],["The topology of uniform convergence is T₂. ",{"type":"∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace β] [inst_1 : T2Space β], T2Space (UniformFun α β)","name":"UniformFun.instT2SpaceUniformFunTopologicalSpace","isProp":true,"docString":"The topology of uniform convergence is T₂. ","distance":0.411736553003374250447876647740486077964305877685546875}],["The tails are equal ",{"type":"∀ {F : PFunctor.{u}} {R : PFunctor.M F → PFunctor.M F → Prop},\n  PFunctor.M.IsBisimulation R →\n    ∀ {a : F.A} {f f' : PFunctor.B F a → PFunctor.M F},\n      R (PFunctor.M.mk { fst := a, snd := f }) (PFunctor.M.mk { fst := a, snd := f' }) →\n        ∀ (i : PFunctor.B F a), R (f i) (f' i)","name":"PFunctor.M.IsBisimulation.tail","isProp":true,"docString":"The tails are equal ","distance":0.412203320033990905368881385584245435893535614013671875}],["Continuity ",{"type":"∀ {F : Type u_1} {R : outParam (Type u_2)} {S : outParam (Type u_3)} [inst : Semiring R] [inst_1 : Semiring S]\n  {σ : outParam (R →+* S)} {M : outParam (Type u_4)} [inst_2 : TopologicalSpace M] [inst_3 : AddCommMonoid M]\n  {M₂ : outParam (Type u_5)} [inst_4 : TopologicalSpace M₂] [inst_5 : AddCommMonoid M₂] [inst_6 : Module R M]\n  [inst_7 : Module S M₂] [self : ContinuousSemilinearMapClass F σ M M₂] (f : F), Continuous ⇑f","name":"ContinuousSemilinearMapClass.map_continuous","isProp":true,"docString":"Continuity ","distance":0.412688187601354339317794028829666785895824432373046875}],["`f` is the coequalizer ",{"type":"{C : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} C] →\n    {X Y : C} →\n      {f : X ⟶ Y} →\n        [self : CategoryTheory.RegularEpi f] →\n          CategoryTheory.Limits.IsColimit\n            (CategoryTheory.Limits.Cofork.ofπ f\n              (_ :\n                CategoryTheory.CategoryStruct.comp CategoryTheory.RegularEpi.left f =\n                  CategoryTheory.CategoryStruct.comp CategoryTheory.RegularEpi.right f))","name":"CategoryTheory.RegularEpi.isColimit","isProp":false,"docString":"`f` is the coequalizer ","distance":0.412772839769214361371751920160022564232349395751953125}],["The empty word ",{"type":"{G : Type u_1} →\n  [inst : Group G] →\n    {A B : Subgroup G} → {d : HNNExtension.NormalWord.TransversalPair G A B} → HNNExtension.NormalWord d","name":"HNNExtension.NormalWord.empty","isProp":false,"docString":"The empty word ","distance":0.412876126636290141647123164148069918155670166015625}],["Exactly one of the following is true (although we don't prove this here). ",{"type":"∀ (x y : SetTheory.PGame), x < y ∨ x ≈ y ∨ y < x ∨ SetTheory.PGame.Fuzzy x y","name":"SetTheory.PGame.lt_or_equiv_or_gt_or_fuzzy","isProp":true,"docString":"Exactly one of the following is true (although we don't prove this here). ","distance":0.4138957896568278282956043767626397311687469482421875}]]