[["Greatest common divisor of a finite set ",{"type":"{Œ± : Type u_1} ‚Üí\n  {Œ≤ : Type u_2} ‚Üí [inst : CancelCommMonoidWithZero Œ±] ‚Üí [inst : NormalizedGCDMonoid Œ±] ‚Üí Finset Œ≤ ‚Üí (Œ≤ ‚Üí Œ±) ‚Üí Œ±","name":"Finset.gcd","isProp":false,"docString":"Greatest common divisor of a finite set ","distance":0.344748961063921999237180671116220764815807342529296875}],[" If the greatest common divisor of each element and a natural number `x` in a finite set is 1, then the greatest common divisor of their product and `x` is also 1.",{"type":"‚àÄ {Œπ : Type u_1} {t : Finset Œπ} {s : Œπ ‚Üí ‚Ñï} {x : ‚Ñï}, (‚àÄ i ‚àà t, (s i).Coprime x) ‚Üí (t.prod fun i => s i).Coprime x","name":"Nat.Coprime.prod_left","isProp":true,"docString":" If the greatest common divisor of each element and a natural number `x` in a finite set is 1, then the greatest common divisor of their product and `x` is also 1.","distance":0.398852146478533786666531568698701448738574981689453125}],["The theorem `Int.gcd_dvd_left` states that for any two integers `a` and `b`, the greatest common divisor (gcd) of `a` and `b` divides `a`. This is written in the Lean theorem prover as `‚Üë(Int.gcd a b) ‚à£ a`, where `Int.gcd a b` computes the gcd of `a` and `b`, the `‚Üë` operator converts that gcd from a natural number to an integer, and `‚à£` represents the \"divides\" relation. In mathematical terms, if $gcd(a, b) = d$, then $d | a$.",{"type":"‚àÄ {a b : ‚Ñ§}, ‚Üë(a.gcd b) ‚à£ a","name":"Int.gcd_dvd_left","isProp":true,"docString":"The theorem `Int.gcd_dvd_left` states that for any two integers `a` and `b`, the greatest common divisor (gcd) of `a` and `b` divides `a`. This is written in the Lean theorem prover as `‚Üë(Int.gcd a b) ‚à£ a`, where `Int.gcd a b` computes the gcd of `a` and `b`, the `‚Üë` operator converts that gcd from a natural number to an integer, and `‚à£` represents the \"divides\" relation. In mathematical terms, if $gcd(a, b) = d$, then $d | a$.","distance":0.398729579445845916385593454833724536001682281494140625}],["Greatest common divisor of a multiset ",{"type":"{Œ± : Type u_1} ‚Üí [inst : CancelCommMonoidWithZero Œ±] ‚Üí [inst : NormalizedGCDMonoid Œ±] ‚Üí Multiset Œ± ‚Üí Œ±","name":"Multiset.gcd","isProp":false,"docString":"Greatest common divisor of a multiset ","distance":0.37651373981704183702134969280450604856014251708984375}],[" For any prime number `p` and `x` in the `p`-adic integers ring `‚Ñ§_[p]`, the difference between `x` and the reduction of `x` modulo `p` lies in the maximal ideal of `‚Ñ§_[p]`.",{"type":"‚àÄ {p : ‚Ñï} [hp_prime : Fact p.Prime] (x : ‚Ñ§_[p]), x - (PadicInt.toZMod x).cast ‚àà LocalRing.maximalIdeal ‚Ñ§_[p]","name":"PadicInt.toZMod_spec","isProp":true,"docString":" For any prime number `p` and `x` in the `p`-adic integers ring `‚Ñ§_[p]`, the difference between `x` and the reduction of `x` modulo `p` lies in the maximal ideal of `‚Ñ§_[p]`.","distance":0.400218509857566184795274466523551382124423980712890625}],["The theorem `Nat.bodd_add_div2` states that for any natural number `n`, if `n` is odd (determined by `Nat.bodd n`), then adding `1` to twice the greatest integer smaller than `n/2` (`2 * Nat.div2 n`) gives `n` itself. If `n` is not odd (i.e., even), then adding `0` to twice of `‚åän/2‚åã` still gives `n`. Essentially, this theorem is expressing an integer as the sum of an odd/even indicator (1 or 0) and twice a rounded-down half.",{"type":"‚àÄ (n : ‚Ñï), (bif n.bodd then 1 else 0) + 2 * n.div2 = n","name":"Nat.bodd_add_div2","isProp":true,"docString":"The theorem `Nat.bodd_add_div2` states that for any natural number `n`, if `n` is odd (determined by `Nat.bodd n`), then adding `1` to twice the greatest integer smaller than `n/2` (`2 * Nat.div2 n`) gives `n` itself. If `n` is not odd (i.e., even), then adding `0` to twice of `‚åän/2‚åã` still gives `n`. Essentially, this theorem is expressing an integer as the sum of an odd/even indicator (1 or 0) and twice a rounded-down half.","distance":0.3999437128985536826775160079705528914928436279296875}],["The greatest common divisor (gcd) of two positive natural numbers,\nviewed as positive natural number. ",{"type":"‚Ñï+ ‚Üí ‚Ñï+ ‚Üí ‚Ñï+","name":"PNat.gcd","isProp":false,"docString":"The greatest common divisor (gcd) of two positive natural numbers,\nviewed as positive natural number. ","distance":0.382438433352774997953105184933519922196865081787109375}],["**Lifting the exponent lemma** for odd primes. ",{"type":"‚àÄ {p : ‚Ñï},\n  Nat.Prime p ‚Üí\n    Odd p ‚Üí\n      ‚àÄ {x y : ‚Ñ§},\n        ‚Üëp ‚à£ x - y ‚Üí\n          ¬¨‚Üëp ‚à£ x ‚Üí ‚àÄ (n : ‚Ñï), multiplicity (‚Üëp) (x ^ n - y ^ n) = multiplicity (‚Üëp) (x - y) + multiplicity p n","name":"multiplicity.Int.pow_sub_pow","isProp":true,"docString":"**Lifting the exponent lemma** for odd primes. ","distance":0.383570486953327682844161472530686296522617340087890625}],["The modulus of (uniform) continuity for `f`, chosen so `|f x - f y| < Œµ/2` when `|x - y| < Œ¥`.\n",{"type":"C(‚ÜëunitInterval, ‚Ñù) ‚Üí (Œµ : ‚Ñù) ‚Üí 0 < Œµ ‚Üí ‚Ñù","name":"bernsteinApproximation.Œ¥","isProp":false,"docString":"The modulus of (uniform) continuity for `f`, chosen so `|f x - f y| < Œµ/2` when `|x - y| < Œ¥`.\n","distance":0.383885251979780017794752211557351984083652496337890625}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"‚àÄ {n : ‚Ñï}, n % 2 = 1 ‚Üî n % 4 = 1 ‚à® n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.385452996666504177358802962771733291447162628173828125}],["For any `y < 1` and any positive `x`, there exists `n : ‚Ñï` with `y ^ n < x`. ",{"type":"‚àÄ {Œ± : Type u_1} [inst : LinearOrderedSemifield Œ±] [inst_1 : Archimedean Œ±] [inst_2 : ExistsAddOfLE Œ±] {x y : Œ±},\n  0 < x ‚Üí y < 1 ‚Üí ‚àÉ n, y ^ n < x","name":"exists_pow_lt_of_lt_one","isProp":true,"docString":"For any `y < 1` and any positive `x`, there exists `n : ‚Ñï` with `y ^ n < x`. ","distance":0.388065065999103342431197916084784083068370819091796875}],["`x^n`, `n : ‚Ñï` is convex on the whole real line whenever `n` is even. ",{"type":"‚àÄ {ùïú : Type u_1} [inst : LinearOrderedCommRing ùïú] {n : ‚Ñï}, Even n ‚Üí ConvexOn ùïú Set.univ fun x => x ^ n","name":"Even.convexOn_pow","isProp":true,"docString":"`x^n`, `n : ‚Ñï` is convex on the whole real line whenever `n` is even. ","distance":0.38923381170078730217909424027311615645885467529296875}],["If `Œæ` is an integer, all its convergents equal `Œæ`. ",{"type":"‚àÄ {Œæ : ‚Ñ§} (n : ‚Ñï), Real.convergent (‚ÜëŒæ) n = ‚ÜëŒæ","name":"Real.convergent_of_int","isProp":true,"docString":"If `Œæ` is an integer, all its convergents equal `Œæ`. ","distance":0.389504670358092830451113286471809260547161102294921875}],["If a solution has `x > 1`, then `d` is positive. ",{"type":"‚àÄ {d : ‚Ñ§} {a : Pell.Solution‚ÇÅ d}, 1 < Pell.Solution‚ÇÅ.x a ‚Üí 0 < d","name":"Pell.Solution‚ÇÅ.d_pos_of_one_lt_x","isProp":true,"docString":"If a solution has `x > 1`, then `d` is positive. ","distance":0.389713549238229817195389159678597934544086456298828125}],["`x^n`, `n : ‚Ñï` is strictly convex on the whole real line whenever `n ‚â† 0` is even. ",{"type":"‚àÄ {n : ‚Ñï}, Even n ‚Üí n ‚â† 0 ‚Üí StrictConvexOn ‚Ñù Set.univ fun x => x ^ n","name":"Even.strictConvexOn_pow","isProp":true,"docString":"`x^n`, `n : ‚Ñï` is strictly convex on the whole real line whenever `n ‚â† 0` is even. ","distance":0.3898162738379749026051968030515126883983612060546875}],["The integers modulo `n : ‚Ñï`. ",{"type":"‚Ñï ‚Üí Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ‚Ñï`. ","distance":0.38998346848058129676672933783265762031078338623046875}],["An arbitrarily chosen modulus of uniform continuity for a given function `f` and `Œµ > 0`. ",{"type":"{Œ± : Type u_1} ‚Üí\n  {Œ≤ : Type u_2} ‚Üí\n    [inst : MetricSpace Œ±] ‚Üí [inst_1 : CompactSpace Œ±] ‚Üí [inst_2 : MetricSpace Œ≤] ‚Üí C(Œ±, Œ≤) ‚Üí (Œµ : ‚Ñù) ‚Üí 0 < Œµ ‚Üí ‚Ñù","name":"ContinuousMap.modulus","isProp":false,"docString":"An arbitrarily chosen modulus of uniform continuity for a given function `f` and `Œµ > 0`. ","distance":0.390983535713735452787886970327235758304595947265625}],["If a differentiable function `f` is approximated by a linear map `A` on a set `s`, up to `Œ¥`,\nthen at almost every `x` in `s` one has `‚Äñf' x - A‚Äñ ‚â§ Œ¥`. ",{"type":"‚àÄ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ‚Ñù E] [inst_2 : FiniteDimensional ‚Ñù E] {s : Set E}\n  {f : E ‚Üí E} [inst_3 : MeasurableSpace E] [inst_4 : BorelSpace E] (Œº : MeasureTheory.Measure E)\n  [inst_5 : MeasureTheory.Measure.IsAddHaarMeasure Œº] {A : E ‚ÜíL[‚Ñù] E} {Œ¥ : NNReal},\n  ApproximatesLinearOn f A s Œ¥ ‚Üí\n    MeasurableSet s ‚Üí\n      ‚àÄ (f' : E ‚Üí E ‚ÜíL[‚Ñù] E),\n        (‚àÄ x ‚àà s, HasFDerivWithinAt f (f' x) s x) ‚Üí ‚àÄ·µê (x : E) ‚àÇMeasureTheory.Measure.restrict Œº s, ‚Äñf' x - A‚Äñ‚Çä ‚â§ Œ¥","name":"ApproximatesLinearOn.norm_fderiv_sub_le","isProp":true,"docString":"If a differentiable function `f` is approximated by a linear map `A` on a set `s`, up to `Œ¥`,\nthen at almost every `x` in `s` one has `‚Äñf' x - A‚Äñ ‚â§ Œ¥`. ","distance":0.391502839972002192325817304663360118865966796875}],["Nonzero divisors have valuation greater than zero. ",{"type":"‚àÄ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\n  (v : IsDedekindDomain.HeightOneSpectrum R) (x : ‚Ü•(nonZeroDivisors R)),\n  0 < IsDedekindDomain.HeightOneSpectrum.intValuationDef v ‚Üëx","name":"IsDedekindDomain.HeightOneSpectrum.int_valuation_zero_le","isProp":true,"docString":"Nonzero divisors have valuation greater than zero. ","distance":0.39265564075042103109325353216263465583324432373046875}],["The greatest common divisor between two elements. ",{"type":"{Œ± : Type u_2} ‚Üí [inst : CancelCommMonoidWithZero Œ±] ‚Üí [self : GCDMonoid Œ±] ‚Üí Œ± ‚Üí Œ± ‚Üí Œ±","name":"GCDMonoid.gcd","isProp":false,"docString":"The greatest common divisor between two elements. ","distance":0.393512671878718800488883289290242828428745269775390625}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ‚â† 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.394025398752264222057561937617720104753971099853515625}],["Any common divisor of both elements is a divisor of the GCD. ",{"type":"‚àÄ {Œ± : Type u_2} [inst : CancelCommMonoidWithZero Œ±] [self : GCDMonoid Œ±] {a b c : Œ±}, a ‚à£ c ‚Üí a ‚à£ b ‚Üí a ‚à£ gcd c b","name":"GCDMonoid.dvd_gcd","isProp":true,"docString":"Any common divisor of both elements is a divisor of the GCD. ","distance":0.3965999571547345059485678575583733618259429931640625}],["The GCD is a divisor of the first element. ",{"type":"‚àÄ {Œ± : Type u_2} [inst : CancelCommMonoidWithZero Œ±] [self : GCDMonoid Œ±] (a b : Œ±), gcd a b ‚à£ a","name":"GCDMonoid.gcd_dvd_left","isProp":true,"docString":"The GCD is a divisor of the first element. ","distance":0.39752150456904811193226123577915132045745849609375}],["For `d ‚à£ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ",{"type":"‚àÄ {n d : ‚Ñï}, d ‚à£ n ‚Üí Nat.totient (n / d) = (Finset.filter (fun k => Nat.gcd n k = d) (Finset.range n)).card","name":"Nat.totient_div_of_dvd","isProp":true,"docString":"For `d ‚à£ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ","distance":0.3979403846624223195505010153283365070819854736328125}]]