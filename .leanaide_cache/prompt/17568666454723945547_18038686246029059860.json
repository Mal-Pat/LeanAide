[["The product of two two-pointings. ",{"type":"{α : Type u_1} → {β : Type u_2} → TwoPointing α → TwoPointing β → TwoPointing (α × β)","name":"TwoPointing.prod","isProp":false,"docString":"The product of two two-pointings. ","distance":0.224832278212381997395397092986968345940113067626953125}],[" The second component of the product of two dual numbers is equal to the sum of the product of their first components and the product of their second components.",{"type":"∀ {R : Type u_1} [inst : Semiring R] (x y : DualNumber R),\n  TrivSqZeroExt.snd (x * y) = TrivSqZeroExt.fst x * TrivSqZeroExt.snd y + TrivSqZeroExt.snd x * TrivSqZeroExt.fst y","name":"DualNumber.snd_mul","isProp":true,"docString":" The second component of the product of two dual numbers is equal to the sum of the product of their first components and the product of their second components.","distance":0.28520453198628847868434377232915721833705902099609375}],["This theorem states that for any two integers `a` and `b`, the negative of their product is equal to the product of `a` and the negative of `b`. In other words, if you multiply two numbers and then take the negative of the result, it's the same as if you had multiplied the first number by the negative of the second number. This theorem encapsulates a fundamental property of integer multiplication.",{"type":"∀ (a b : ℤ), -(a * b) = a * -b","name":"Int.neg_mul_eq_mul_neg","isProp":true,"docString":"This theorem states that for any two integers `a` and `b`, the negative of their product is equal to the product of `a` and the negative of `b`. In other words, if you multiply two numbers and then take the negative of the result, it's the same as if you had multiplied the first number by the negative of the second number. This theorem encapsulates a fundamental property of integer multiplication.","distance":0.31689569932737315927084864597418345510959625244140625}],["Product of two rings is a ring. ",{"type":"{R : Type u_3} → {S : Type u_5} → [inst : Ring R] → [inst : Ring S] → Ring (R × S)","name":"Prod.instRing","isProp":false,"docString":"Product of two rings is a ring. ","distance":0.226982987176868211687263965359306894242763519287109375}],[" For any category with binary products, the product of two objects exists.",{"type":"∀ {C : Type u_2} [inst : CategoryTheory.Category.{u_1, u_2} C] [inst_1 : CategoryTheory.Limits.HasBinaryProducts C]\n  (X Y : C), CategoryTheory.Limits.HasLimit (CategoryTheory.Limits.pair X Y)","name":"CategoryTheory.Limits.prod.functor.proof_1","isProp":true,"docString":" For any category with binary products, the product of two objects exists.","distance":0.295103210085104705751035680805216543376445770263671875}],["This theorem states that for any two integers `a` and `b`, if both `a` and `b` are greater than zero, then their product is also greater than zero. In other words, the product of two positive integers is always a positive integer.",{"type":"∀ {a b : ℤ}, 0 < a → 0 < b → 0 < a * b","name":"Int.mul_pos","isProp":true,"docString":"This theorem states that for any two integers `a` and `b`, if both `a` and `b` are greater than zero, then their product is also greater than zero. In other words, the product of two positive integers is always a positive integer.","distance":0.32122032608284367682927040732465684413909912109375}],["Product of two homeomorphisms. ",{"type":"{X : Type u_1} →\n  {Y : Type u_2} →\n    [inst : TopologicalSpace X] →\n      [inst_1 : TopologicalSpace Y] →\n        {X' : Type u_4} →\n          {Y' : Type u_5} →\n            [inst_2 : TopologicalSpace X'] → [inst_3 : TopologicalSpace Y'] → X ≃ₜ X' → Y ≃ₜ Y' → X × Y ≃ₜ X' × Y'","name":"Homeomorph.prodCongr","isProp":false,"docString":"Product of two homeomorphisms. ","distance":0.242694996612570823568688638260937295854091644287109375}],["Product of two uniform isomorphisms. ",{"type":"{α : Type u} →\n  {β : Type u_1} →\n    {γ : Type u_2} →\n      {δ : Type u_3} →\n        [inst : UniformSpace α] →\n          [inst_1 : UniformSpace β] →\n            [inst_2 : UniformSpace γ] → [inst_3 : UniformSpace δ] → α ≃ᵤ β → γ ≃ᵤ δ → α × γ ≃ᵤ β × δ","name":"UniformEquiv.prodCongr","isProp":false,"docString":"Product of two uniform isomorphisms. ","distance":0.2449725509407626178326466970247565768659114837646484375}],["The product of two positive elements is positive. ",{"type":"∀ {α : Type u} [self : StrictOrderedRing α] (a b : α), 0 < a → 0 < b → 0 < a * b","name":"StrictOrderedRing.mul_pos","isProp":true,"docString":"The product of two positive elements is positive. ","distance":0.250720072303483865194806412546313367784023284912109375}],["Expressing the product of two polynomials as a double sum. ",{"type":"∀ {R : Type u} [inst : Semiring R] {p q : Polynomial R},\n  p * q =\n    Finset.sum (Polynomial.support p) fun i =>\n      Polynomial.sum q fun j a => (Polynomial.monomial (i + j)) (Polynomial.coeff p i * a)","name":"Polynomial.mul_eq_sum_sum","isProp":true,"docString":"Expressing the product of two polynomials as a double sum. ","distance":0.25074018888683602401812322568730451166629791259765625}],["The second projection from the product. ",{"type":"{X Y : TopCat} → TopCat.of (↑X × ↑Y) ⟶ Y","name":"TopCat.prodSnd","isProp":false,"docString":"The second projection from the product. ","distance":0.253494237916766673723856229116790927946567535400390625}],["The equivalence between the opposite of a product and the product of the opposites. ",{"type":"(C : Type u₃) →\n  [inst : CategoryTheory.Category.{v₃, u₃} C] →\n    {D : Type u₄} → [inst_1 : CategoryTheory.Category.{v₄, u₄} D] → (C × D)ᵒᵖ ≌ Cᵒᵖ × Dᵒᵖ","name":"CategoryTheory.prodOpEquiv","isProp":false,"docString":"The equivalence between the opposite of a product and the product of the opposites. ","distance":0.25741193846074816864444301245384849607944488525390625}],["The tensor product of two holors. ",{"type":"{α : Type} → {ds₁ ds₂ : List ℕ} → [inst : Mul α] → Holor α ds₁ → Holor α ds₂ → Holor α (ds₁ ++ ds₂)","name":"Holor.mul","isProp":false,"docString":"The tensor product of two holors. ","distance":0.262709808450343695884754424696438945829868316650390625}],["Product of two kernels. This is meaningful only when the kernels are s-finite. ",{"type":"{α : Type u_1} →\n  {β : Type u_2} →\n    {mα : MeasurableSpace α} →\n      {mβ : MeasurableSpace β} →\n        {γ : Type u_4} →\n          {mγ : MeasurableSpace γ} →\n            ↥(ProbabilityTheory.kernel α β) → ↥(ProbabilityTheory.kernel α γ) → ↥(ProbabilityTheory.kernel α (β × γ))","name":"ProbabilityTheory.kernel.prod","isProp":false,"docString":"Product of two kernels. This is meaningful only when the kernels are s-finite. ","distance":0.263967151436742486492192938385414890944957733154296875}],["The projection onto the second summand of a binary biproduct. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.Limits.HasZeroMorphisms C] →\n      {X Y : C} → [inst_2 : CategoryTheory.Limits.HasBinaryBiproduct X Y] → X ⊞ Y ⟶ Y","name":"CategoryTheory.Limits.biprod.snd","isProp":false,"docString":"The projection onto the second summand of a binary biproduct. ","distance":0.264151622852520973072643073464860208332538604736328125}],["Notation for the product ",{"type":"Lean.TrailingParserDescr","name":"CategoryTheory.Limits.«term_⨯_»","isProp":false,"docString":"Notation for the product ","distance":0.26416229721991246748302728519774973392486572265625}],["Coproduct of two monoids or groups. ",{"type":"(M : Type u_1) → (N : Type u_2) → [inst : MulOneClass M] → [inst : MulOneClass N] → Type (max u_1 u_2)","name":"Monoid.Coprod","isProp":false,"docString":"Coproduct of two monoids or groups. ","distance":0.265160475215727109432606312111602164804935455322265625}],["Product of two semirings is a semiring. ",{"type":"{R : Type u_3} → {S : Type u_5} → [inst : Semiring R] → [inst : Semiring S] → Semiring (R × S)","name":"Prod.instSemiring","isProp":false,"docString":"Product of two semirings is a semiring. ","distance":0.26641872126673671328234149768832139670848846435546875}],["The product of two partial equivalences, as a partial equivalence on the product. ",{"type":"{α : Type u_1} →\n  {β : Type u_2} → {γ : Type u_3} → {δ : Type u_4} → PartialEquiv α β → PartialEquiv γ δ → PartialEquiv (α × γ) (β × δ)","name":"PartialEquiv.prod","isProp":false,"docString":"The product of two partial equivalences, as a partial equivalence on the product. ","distance":0.269095526364937887020545304039842449128627777099609375}],["Product of two distributive types is distributive. ",{"type":"{R : Type u_3} → {S : Type u_5} → [inst : Distrib R] → [inst : Distrib S] → Distrib (R × S)","name":"Prod.instDistrib","isProp":false,"docString":"Product of two distributive types is distributive. ","distance":0.269750223965049495955526026591542176902294158935546875}],["Product of two commutative rings is a commutative ring. ",{"type":"{R : Type u_3} → {S : Type u_5} → [inst : CommRing R] → [inst : CommRing S] → CommRing (R × S)","name":"Prod.instCommRing","isProp":false,"docString":"Product of two commutative rings is a commutative ring. ","distance":0.27061109894845902790194713816163130104541778564453125}],["The prod of two morphisms is a morphism. ",{"type":"{R : Type u} →\n  {A : Type v} →\n    {B : Type w} →\n      {C : Type w₁} →\n        [inst : Monoid R] →\n          [inst_1 : NonUnitalNonAssocSemiring A] →\n            [inst_2 : DistribMulAction R A] →\n              [inst_3 : NonUnitalNonAssocSemiring B] →\n                [inst_4 : DistribMulAction R B] →\n                  [inst_5 : NonUnitalNonAssocSemiring C] →\n                    [inst_6 : DistribMulAction R C] → (A →ₙₐ[R] B) → (A →ₙₐ[R] C) → A →ₙₐ[R] B × C","name":"NonUnitalAlgHom.prod","isProp":false,"docString":"The prod of two morphisms is a morphism. ","distance":0.271432277045268011139711461510160006582736968994140625}],["The product of two lower sets as a lower set. ",{"type":"{α : Type u_1} →\n  {β : Type u_2} → [inst : Preorder α] → [inst_1 : Preorder β] → LowerSet α → LowerSet β → LowerSet (α × β)","name":"LowerSet.prod","isProp":false,"docString":"The product of two lower sets as a lower set. ","distance":0.273681054464709527795918120318674482405185699462890625}],["An inner product with a sum on the left. ",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {ι : Type u_4} (s : Finset ι) (f : ι → E) (x : E), ⟪Finset.sum s fun i => f i, x⟫_𝕜 = Finset.sum s fun i => ⟪f i, x⟫_𝕜","name":"sum_inner","isProp":true,"docString":"An inner product with a sum on the left. ","distance":0.276541410957849453922108295955695211887359619140625}]]