[["The Bochner integral in L1 space ",{"type":"{α : Type u_5} →\n  {E : Type u_6} →\n    [inst : NormedAddCommGroup E] →\n      {m : MeasurableSpace α} →\n        {μ : MeasureTheory.Measure α} →\n          [inst_1 : NormedSpace ℝ E] → [inst_2 : CompleteSpace E] → ↥(MeasureTheory.Lp E 1) → E","name":"MeasureTheory.L1.integral","isProp":false,"docString":"The Bochner integral in L1 space ","distance":0.327610107660760319081560965059907175600528717041015625}],[" For any integrable function `f` from a box `I` to the normed space `E` over real numbers, with respect to a normed additive group `ι`, a finite type instance for `ι`, a normed space `F`, an integration parameter `l`, and a box additive map `vol` from `ι` to `E →ℝ[ℝ] F`, the integral of `f` over `I` with respect to `vol` and `l` exists and equals the box integral of `f` over `I` with respect to `vol` and `l`.",{"type":"∀ {ι : Type u} {E : Type v} {F : Type w} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {I : BoxIntegral.Box ι} [inst_4 : Fintype ι]\n  {l : BoxIntegral.IntegrationParams} {f : (ι → ℝ) → E} {vol : BoxIntegral.BoxAdditiveMap ι (E →L[ℝ] F) ⊤},\n  BoxIntegral.Integrable I l f vol → BoxIntegral.HasIntegral I l f vol (BoxIntegral.integral I l f vol)","name":"BoxIntegral.Integrable.hasIntegral","isProp":true,"docString":" For any integrable function `f` from a box `I` to the normed space `E` over real numbers, with respect to a normed additive group `ι`, a finite type instance for `ι`, a normed space `F`, an integration parameter `l`, and a box additive map `vol` from `ι` to `E →ℝ[ℝ] F`, the integral of `f` over `I` with respect to `vol` and `l` exists and equals the box integral of `f` over `I` with respect to `vol` and `l`.","distance":0.36493908965374355357624835960450582206249237060546875}],["This theorem states that for any given type `ι`, and any given normed add commutative groups `E` and `F` over the real numbers with `E` and `F` also being a normed space over the real numbers. If `I` is a box integral (a multi-dimensional generalization of an interval), `l` is some integration parameters, `vol` is a box additive map (linear maps that preserve addition) between `ι` and the continuous linear mappings from `E` to `F`, and `c` is an element of `E`, then the integral of the constant function `c` over the box `I` with respect to `vol` is equal to `vol` applied to `I` and `c`. In other words, the integral of a constant function over a box integral is simply the volume of the box times the constant.",{"type":"∀ {ι : Type u} {E : Type v} {F : Type w} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {I : BoxIntegral.Box ι} [inst_4 : Fintype ι]\n  {l : BoxIntegral.IntegrationParams} {vol : BoxIntegral.BoxAdditiveMap ι (E →L[ℝ] F) ⊤} (c : E),\n  BoxIntegral.HasIntegral I l (fun x => c) vol ((vol I) c)","name":"BoxIntegral.hasIntegral_const","isProp":true,"docString":"This theorem states that for any given type `ι`, and any given normed add commutative groups `E` and `F` over the real numbers with `E` and `F` also being a normed space over the real numbers. If `I` is a box integral (a multi-dimensional generalization of an interval), `l` is some integration parameters, `vol` is a box additive map (linear maps that preserve addition) between `ι` and the continuous linear mappings from `E` to `F`, and `c` is an element of `E`, then the integral of the constant function `c` over the box `I` with respect to `vol` is equal to `vol` applied to `I` and `c`. In other words, the integral of a constant function over a box integral is simply the volume of the box times the constant.","distance":0.350564622779744483604957849820493720471858978271484375}],["The Fourier integral of an `L^1` function is a continuous function. ",{"type":"∀ {𝕜 : Type u_1} [inst : CommRing 𝕜] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : MeasurableSpace V] {W : Type u_3} [inst_4 : AddCommGroup W] [inst_5 : Module 𝕜 W] {E : Type u_4}\n  [inst_6 : NormedAddCommGroup E] [inst_7 : NormedSpace ℂ E] [inst_8 : TopologicalSpace 𝕜] [inst_9 : TopologicalRing 𝕜]\n  [inst_10 : TopologicalSpace V] [inst_11 : BorelSpace V] [inst_12 : TopologicalSpace W]\n  {e : Multiplicative 𝕜 →* ↥circle} {μ : MeasureTheory.Measure V} {L : V →ₗ[𝕜] W →ₗ[𝕜] 𝕜}\n  [inst_13 : FirstCountableTopology W],\n  Continuous ⇑e →\n    (Continuous fun p => (L p.1) p.2) →\n      ∀ {f : V → E}, MeasureTheory.Integrable f → Continuous (VectorFourier.fourierIntegral e μ L f)","name":"VectorFourier.fourierIntegral_continuous","isProp":true,"docString":"The Fourier integral of an `L^1` function is a continuous function. ","distance":0.33241935768847363785738480146392248570919036865234375}],[" For a given normed add commutative group `E`, normed space `F` over `ℝ`, box `I`, integration parameter `l`, function `f` from `ι` to `ℝ`, volume function `vol`, and target value `y`, `f` has an integral over box `I` with parameters `l` and volume `vol` equal to `y` if and only if for every `ε > 0`, there exists a function `r` such that for all `c > 0` and tagged prepartitions `π` of `I` that are a base set, partition, and satisfy `l.RCond (r c)`, the integral sum of `f` over `π` with volume `vol` is within `ε` of `y`.",{"type":"∀ {ι : Type u} {E : Type v} {F : Type w} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {I : BoxIntegral.Box ι} [inst_4 : Fintype ι]\n  {l : BoxIntegral.IntegrationParams} {f : (ι → ℝ) → E} {vol : BoxIntegral.BoxAdditiveMap ι (E →L[ℝ] F) ⊤} {y : F},\n  BoxIntegral.HasIntegral I l f vol y ↔\n    ∀ ε > 0,\n      ∃ r,\n        (∀ (c : NNReal), l.RCond (r c)) ∧\n          ∀ (c : NNReal) (π : BoxIntegral.TaggedPrepartition I),\n            l.MemBaseSet I c (r c) π → π.IsPartition → dist (BoxIntegral.integralSum f vol π) y ≤ ε","name":"BoxIntegral.hasIntegral_iff","isProp":true,"docString":" For a given normed add commutative group `E`, normed space `F` over `ℝ`, box `I`, integration parameter `l`, function `f` from `ι` to `ℝ`, volume function `vol`, and target value `y`, `f` has an integral over box `I` with parameters `l` and volume `vol` equal to `y` if and only if for every `ε > 0`, there exists a function `r` such that for all `c > 0` and tagged prepartitions `π` of `I` that are a base set, partition, and satisfy `l.RCond (r c)`, the integral sum of `f` over `π` with volume `vol` is within `ε` of `y`.","distance":0.369399213467711706737617305407184176146984100341796875}],["This theorem states that for any function `f` from a real-valued vector to a normed add-commutative group `E` and any `vol` (which is a box-additive map from `ι` to the continuous linear map from `E` to a normed add-commutative group `F`), if `f` has an integral over a given box `I` according to a set of integration parameters `l`, that yields an element `y` of `F`, then `f` is integrable over box `I` with respect to the volume element `vol` and the integration parameters `l`. This holds for any given types `ι`, `E`, `F` and for any `I`, `l`, `f`, `vol`, `y` which satisfy the conditions described.",{"type":"∀ {ι : Type u} {E : Type v} {F : Type w} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {I : BoxIntegral.Box ι} [inst_4 : Fintype ι]\n  {l : BoxIntegral.IntegrationParams} {f : (ι → ℝ) → E} {vol : BoxIntegral.BoxAdditiveMap ι (E →L[ℝ] F) ⊤} {y : F},\n  BoxIntegral.HasIntegral I l f vol y → BoxIntegral.Integrable I l f vol","name":"BoxIntegral.HasIntegral.integrable","isProp":true,"docString":"This theorem states that for any function `f` from a real-valued vector to a normed add-commutative group `E` and any `vol` (which is a box-additive map from `ι` to the continuous linear map from `E` to a normed add-commutative group `F`), if `f` has an integral over a given box `I` according to a set of integration parameters `l`, that yields an element `y` of `F`, then `f` is integrable over box `I` with respect to the volume element `vol` and the integration parameters `l`. This holds for any given types `ι`, `E`, `F` and for any `I`, `l`, `f`, `vol`, `y` which satisfy the conditions described.","distance":0.35316951529782947272195769983227364718914031982421875}],["The Bochner integral in L1 space as a continuous linear map over ℝ. ",{"type":"{α : Type u_1} →\n  {E : Type u_2} →\n    [inst : NormedAddCommGroup E] →\n      {m : MeasurableSpace α} →\n        {μ : MeasureTheory.Measure α} →\n          [inst_1 : NormedSpace ℝ E] → [inst_2 : CompleteSpace E] → ↥(MeasureTheory.Lp E 1) →L[ℝ] E","name":"MeasureTheory.L1.integralCLM","isProp":false,"docString":"The Bochner integral in L1 space as a continuous linear map over ℝ. ","distance":0.339012069931986015358660324636730365455150604248046875}],["The Bochner integral over simple functions in L1 space as a continuous linear map. ",{"type":"(α : Type u_1) →\n  (E : Type u_2) →\n    (𝕜 : Type u_4) →\n      [inst : NormedAddCommGroup E] →\n        {m : MeasurableSpace α} →\n          (μ : MeasureTheory.Measure α) →\n            [inst_1 : NormedField 𝕜] →\n              [inst_2 : NormedSpace 𝕜 E] →\n                [inst_3 : NormedSpace ℝ E] →\n                  [inst_4 : SMulCommClass ℝ 𝕜 E] → ↥(MeasureTheory.Lp.simpleFunc E 1 μ) →L[𝕜] E","name":"MeasureTheory.L1.SimpleFunc.integralCLM'","isProp":false,"docString":"The Bochner integral over simple functions in L1 space as a continuous linear map. ","distance":0.33980921045396372814906271742074750363826751708984375}],["The Bochner integral in L1 space as a continuous linear map. ",{"type":"{α : Type u_1} →\n  {E : Type u_2} →\n    (𝕜 : Type u_4) →\n      [inst : NormedAddCommGroup E] →\n        {m : MeasurableSpace α} →\n          {μ : MeasureTheory.Measure α} →\n            [inst_1 : NormedSpace ℝ E] →\n              [inst_2 : NontriviallyNormedField 𝕜] →\n                [inst_3 : NormedSpace 𝕜 E] →\n                  [inst_4 : SMulCommClass ℝ 𝕜 E] → [inst_5 : CompleteSpace E] → ↥(MeasureTheory.Lp E 1) →L[𝕜] E","name":"MeasureTheory.L1.integralCLM'","isProp":false,"docString":"The Bochner integral in L1 space as a continuous linear map. ","distance":0.34146821322047316016323748044669628143310546875}],["The Bochner integral over simple functions in L1 space as a continuous linear map over ℝ. ",{"type":"(α : Type u_1) →\n  (E : Type u_2) →\n    [inst : NormedAddCommGroup E] →\n      {m : MeasurableSpace α} →\n        (μ : MeasureTheory.Measure α) → [inst_1 : NormedSpace ℝ E] → ↥(MeasureTheory.Lp.simpleFunc E 1 μ) →L[ℝ] E","name":"MeasureTheory.L1.SimpleFunc.integralCLM","isProp":false,"docString":"The Bochner integral over simple functions in L1 space as a continuous linear map over ℝ. ","distance":0.34275760968558455221710801197332330048084259033203125}],["The Bochner integral over simple functions in L1 space. ",{"type":"{α : Type u_1} →\n  {E : Type u_2} →\n    [inst : NormedAddCommGroup E] →\n      {m : MeasurableSpace α} →\n        {μ : MeasureTheory.Measure α} → [inst_1 : NormedSpace ℝ E] → ↥(MeasureTheory.Lp.simpleFunc E 1 μ) → E","name":"MeasureTheory.L1.SimpleFunc.integral","isProp":false,"docString":"The Bochner integral over simple functions in L1 space. ","distance":0.344358237973520164842966551077552139759063720703125}],["The subalgebra of functions that are bounded along a filter `l`. ",{"type":"{α : Type u_1} → {β : Type u_2} → [inst : NormedField β] → Filter α → Subalgebra β (α → β)","name":"Filter.boundedFilterSubalgebra","isProp":false,"docString":"The subalgebra of functions that are bounded along a filter `l`. ","distance":0.347916450346073935495638806969509460031986236572265625}],["The submodule of functions that are bounded along a filter `l`. ",{"type":"{α : Type u_1} → {β : Type u_2} → [inst : NormedField β] → Filter α → Submodule β (α → β)","name":"Filter.boundedFilterSubmodule","isProp":false,"docString":"The submodule of functions that are bounded along a filter `l`. ","distance":0.354500738275530025145343415715615265071392059326171875}],["A finite sequence of Lp functions is uniformly integrable. ",{"type":"∀ {α : Type u_1} {β : Type u_2} {ι : Type u_3} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α)\n  [inst : NormedAddCommGroup β] {p : ENNReal} [inst_1 : Finite ι],\n  1 ≤ p → p ≠ ⊤ → ∀ {f : ι → α → β}, (∀ (i : ι), MeasureTheory.Memℒp (f i) p) → MeasureTheory.UnifIntegrable f p μ","name":"MeasureTheory.unifIntegrable_finite","isProp":true,"docString":"A finite sequence of Lp functions is uniformly integrable. ","distance":0.354765749070222735639390521100722253322601318359375}],["If `f` is integrable on intervals `Ioc (a i) (b i)`,\nwhere `a i` tends to -∞ and `b i` tends to ∞, and\n`∫ x in a i .. b i, ‖f x‖ ∂μ` converges to `I : ℝ` along a filter `l`,\nthen `f` is integrable on the interval (-∞, ∞) ",{"type":"∀ {ι : Type u_1} {E : Type u_2} {μ : MeasureTheory.Measure ℝ} {l : Filter ι} [inst : Filter.NeBot l]\n  [inst : Filter.IsCountablyGenerated l] [inst : NormedAddCommGroup E] {a b : ι → ℝ} {f : ℝ → E} (I : ℝ),\n  (∀ (i : ι), MeasureTheory.IntegrableOn f (Set.Ioc (a i) (b i))) →\n    Filter.Tendsto a l Filter.atBot →\n      Filter.Tendsto b l Filter.atTop →\n        Filter.Tendsto (fun i => ∫ (x : ℝ) in a i..b i, ‖f x‖ ∂μ) l (nhds I) → MeasureTheory.Integrable f","name":"MeasureTheory.integrable_of_intervalIntegral_norm_tendsto","isProp":true,"docString":"If `f` is integrable on intervals `Ioc (a i) (b i)`,\nwhere `a i` tends to -∞ and `b i` tends to ∞, and\n`∫ x in a i .. b i, ‖f x‖ ∂μ` converges to `I : ℝ` along a filter `l`,\nthen `f` is integrable on the interval (-∞, ∞) ","distance":0.3557122468532352144165997742675244808197021484375}],["The uniform norm of the Fourier integral of `f` is bounded by the `L¹` norm of `f`. ",{"type":"∀ {𝕜 : Type u_1} [inst : CommRing 𝕜] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : MeasurableSpace V] {W : Type u_3} [inst_4 : AddCommGroup W] [inst_5 : Module 𝕜 W] {E : Type u_4}\n  [inst_6 : NormedAddCommGroup E] [inst_7 : NormedSpace ℂ E] (e : Multiplicative 𝕜 →* ↥circle)\n  (μ : MeasureTheory.Measure V) (L : V →ₗ[𝕜] W →ₗ[𝕜] 𝕜) (f : V → E) (w : W),\n  ‖VectorFourier.fourierIntegral e μ L f w‖ ≤ ∫ (v : V), ‖f v‖ ∂μ","name":"VectorFourier.norm_fourierIntegral_le_integral_norm","isProp":true,"docString":"The uniform norm of the Fourier integral of `f` is bounded by the `L¹` norm of `f`. ","distance":0.357318842768352851191338004355202428996562957763671875}],["When a function has a limit at infinity `l`, and its derivative is nonnegative, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg`). Version assuming differentiability on `(a, +∞)` and\ncontinuity at `a⁺`. ",{"type":"∀ {g g' : ℝ → ℝ} {a l : ℝ},\n  ContinuousWithinAt g (Set.Ici a) a →\n    (∀ x ∈ Set.Ioi a, HasDerivAt g (g' x) x) →\n      (∀ x ∈ Set.Ioi a, 0 ≤ g' x) → Filter.Tendsto g Filter.atTop (nhds l) → ∫ (x : ℝ) in Set.Ioi a, g' x = l - g a","name":"MeasureTheory.integral_Ioi_of_hasDerivAt_of_nonneg","isProp":true,"docString":"When a function has a limit at infinity `l`, and its derivative is nonnegative, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg`). Version assuming differentiability on `(a, +∞)` and\ncontinuity at `a⁺`. ","distance":0.357410329688907457690305591313517652451992034912109375}],["When a function has a limit at infinity `l`, and its derivative is nonpositive, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg`). Version assuming differentiability on `(a, +∞)` and\ncontinuity at `a⁺`. ",{"type":"∀ {g g' : ℝ → ℝ} {a l : ℝ},\n  ContinuousWithinAt g (Set.Ici a) a →\n    (∀ x ∈ Set.Ioi a, HasDerivAt g (g' x) x) →\n      (∀ x ∈ Set.Ioi a, g' x ≤ 0) → Filter.Tendsto g Filter.atTop (nhds l) → ∫ (x : ℝ) in Set.Ioi a, g' x = l - g a","name":"MeasureTheory.integral_Ioi_of_hasDerivAt_of_nonpos","isProp":true,"docString":"When a function has a limit at infinity `l`, and its derivative is nonpositive, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg`). Version assuming differentiability on `(a, +∞)` and\ncontinuity at `a⁺`. ","distance":0.3582330824545369996059207551297731697559356689453125}],["If a function is locally integrable, then it is integrable on any compact set. ",{"type":"∀ {X : Type u_1} {E : Type u_3} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {f : X → E} {μ : MeasureTheory.Measure X} {k : Set X},\n  MeasureTheory.LocallyIntegrable f → IsCompact k → MeasureTheory.IntegrableOn f k","name":"MeasureTheory.LocallyIntegrable.integrableOn_isCompact","isProp":true,"docString":"If a function is locally integrable, then it is integrable on any compact set. ","distance":0.3582442687005611414718941887258552014827728271484375}],["A holomorphic function on a compact complex manifold is locally constant. ",{"type":"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_2} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_4} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f","name":"MDifferentiable.isLocallyConstant","isProp":true,"docString":"A holomorphic function on a compact complex manifold is locally constant. ","distance":0.3591791020318115812415271648205816745758056640625}],["A Lebesgue Integral from -∞ to y can be expressed as the sum of one from -∞ to 0 and 0 to x ",{"type":"∀ {y z : ℝ} (f : ℝ → ENNReal),\n  z ≤ y → ∫⁻ (x : ℝ) in Set.Iic y, f x = (∫⁻ (x : ℝ) in Set.Iio z, f x) + ∫⁻ (x : ℝ) in Set.Icc z y, f x","name":"lintegral_Iic_eq_lintegral_Iio_add_Icc","isProp":true,"docString":"A Lebesgue Integral from -∞ to y can be expressed as the sum of one from -∞ to 0 and 0 to x ","distance":0.359224521500123739059517902205698192119598388671875}],["Convergence in Lp implies uniform integrability. ",{"type":"∀ {α : Type u_1} {β : Type u_2} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α) [inst : NormedAddCommGroup β]\n  {p : ENNReal} {f : ℕ → α → β} {g : α → β},\n  1 ≤ p →\n    p ≠ ⊤ →\n      (∀ (n : ℕ), MeasureTheory.Memℒp (f n) p) →\n        MeasureTheory.Memℒp g p →\n          Filter.Tendsto (fun n => MeasureTheory.snorm (f n - g) p μ) Filter.atTop (nhds 0) →\n            MeasureTheory.UnifIntegrable f p μ","name":"MeasureTheory.unifIntegrable_of_tendsto_Lp","isProp":true,"docString":"Convergence in Lp implies uniform integrability. ","distance":0.36053036636650370727608105880790390074253082275390625}],["A finite sequence of Lp functions is uniformly integrable in the probability sense. ",{"type":"∀ {α : Type u_1} {β : Type u_2} {ι : Type u_3} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α}\n  [inst : NormedAddCommGroup β] {p : ENNReal} {f : ι → α → β} [inst_1 : Finite ι],\n  1 ≤ p → p ≠ ⊤ → (∀ (i : ι), MeasureTheory.Memℒp (f i) p) → MeasureTheory.UniformIntegrable f p μ","name":"MeasureTheory.uniformIntegrable_finite","isProp":true,"docString":"A finite sequence of Lp functions is uniformly integrable in the probability sense. ","distance":0.36086882807427167474401130675687454640865325927734375}],["When a function has a limit at infinity `l`, and its derivative is nonnegative, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg'`). Version assuming differentiability on `[a, +∞)`. ",{"type":"∀ {g g' : ℝ → ℝ} {a l : ℝ},\n  (∀ x ∈ Set.Ici a, HasDerivAt g (g' x) x) →\n    (∀ x ∈ Set.Ioi a, 0 ≤ g' x) → Filter.Tendsto g Filter.atTop (nhds l) → ∫ (x : ℝ) in Set.Ioi a, g' x = l - g a","name":"MeasureTheory.integral_Ioi_of_hasDerivAt_of_nonneg'","isProp":true,"docString":"When a function has a limit at infinity `l`, and its derivative is nonnegative, then the\nintegral of the derivative on `(a, +∞)` is `l - g a` (and the derivative is integrable, see\n`integrable_on_Ioi_deriv_of_nonneg'`). Version assuming differentiability on `[a, +∞)`. ","distance":0.3611336388170938160868672639480791985988616943359375}]]