[["The Bochner integral ",{"type":"Lean.ParserDescr","name":"MeasureTheory.¬´term‚à´_In_,_‚àÇ_¬ª","isProp":false,"docString":"The Bochner integral ","distance":0.362361575698423532543301917030476033687591552734375}],[" For any measurable space, normed add commutative group, measurable function, measurable set, and measure, the function is integrable with respect to the indicator function of the set if and only if it is integrable over the set.",{"type":"‚àÄ {Œ± : Type u_1} {E : Type u_3} [inst : MeasurableSpace Œ±] [inst_1 : NormedAddCommGroup E] {f : Œ± ‚Üí E} {s : Set Œ±}\n  {Œº : MeasureTheory.Measure Œ±},\n  MeasurableSet s ‚Üí (MeasureTheory.Integrable (s.indicator f) Œº ‚Üî MeasureTheory.IntegrableOn f s Œº)","name":"MeasureTheory.integrable_indicator_iff","isProp":true,"docString":" For any measurable space, normed add commutative group, measurable function, measurable set, and measure, the function is integrable with respect to the indicator function of the set if and only if it is integrable over the set.","distance":0.42012633037211444264613646737416274845600128173828125}],["This is the statement of H√∂lder's inequality for integrable functions. It states that, given a measurable space and a measure on this space, and a normed field acting on a normed additively commutative group, if we have an integrable function from the measurable space to the normed group, then for any function from the measurable space to the normed field that is strongly measurable almost everywhere, and whose essential supremum of its norm is finite, the function obtained by pointwise multiplication of these two functions is also integrable. In simpler terms, the scalar multiplication of an integrable vector-valued function by a scalar function with finite essential supremum is integrable.",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_2} {m : MeasurableSpace Œ±} {Œº : MeasureTheory.Measure Œ±} [inst : NormedAddCommGroup Œ≤]\n  {ùïú : Type u_5} [inst_1 : NormedField ùïú] [inst_2 : NormedSpace ùïú Œ≤] {f : Œ± ‚Üí Œ≤},\n  MeasureTheory.Integrable f Œº ‚Üí\n    ‚àÄ {g : Œ± ‚Üí ùïú},\n      MeasureTheory.AEStronglyMeasurable g Œº ‚Üí\n        essSup (fun x => ‚Üë‚Äñg x‚Äñ‚Çä) Œº ‚â† ‚ä§ ‚Üí MeasureTheory.Integrable (fun x => g x ‚Ä¢ f x) Œº","name":"MeasureTheory.Integrable.essSup_smul","isProp":true,"docString":"This is the statement of H√∂lder's inequality for integrable functions. It states that, given a measurable space and a measure on this space, and a normed field acting on a normed additively commutative group, if we have an integrable function from the measurable space to the normed group, then for any function from the measurable space to the normed field that is strongly measurable almost everywhere, and whose essential supremum of its norm is finite, the function obtained by pointwise multiplication of these two functions is also integrable. In simpler terms, the scalar multiplication of an integrable vector-valued function by a scalar function with finite essential supremum is integrable.","distance":0.417692517022559328676578616068582050502300262451171875}],["finite = integral + finite type ",{"type":"‚àÄ {R : Type u_1} {S : Type u_4} [inst : CommRing R] [inst_1 : CommRing S] {f : R ‚Üí+* S},\n  RingHom.Finite f ‚Üî RingHom.IsIntegral f ‚àß RingHom.FiniteType f","name":"RingHom.finite_iff_isIntegral_and_finiteType","isProp":true,"docString":"finite = integral + finite type ","distance":0.36238626830546050161530047262203879654407501220703125}],[" For any measure space and normed add commutative group, if two integrable functions from the space to the group are given, then their integrals with respect to the measure are equal to the sum of their individual integrals.",{"type":"‚àÄ {Œ± : Type u_1} {G : Type u_5} [inst : NormedAddCommGroup G] [inst_1 : NormedSpace ‚Ñù G] {m : MeasurableSpace Œ±}\n  {Œº : MeasureTheory.Measure Œ±} {f g : Œ± ‚Üí G},\n  MeasureTheory.Integrable f Œº ‚Üí\n    MeasureTheory.Integrable g Œº ‚Üí ‚à´ (a : Œ±), f a + g a ‚àÇŒº = ‚à´ (a : Œ±), f a ‚àÇŒº + ‚à´ (a : Œ±), g a ‚àÇŒº","name":"MeasureTheory.integral_add","isProp":true,"docString":" For any measure space and normed add commutative group, if two integrable functions from the space to the group are given, then their integrals with respect to the measure are equal to the sum of their individual integrals.","distance":0.423482366239321006418094839318655431270599365234375}],["The theorem states that if we have a function `f` that is locally integrable and another function `g` that is continuous with compact support, then the product of `f` and `g` (denoted as `f ‚Ä¢ g`) is integrable. Here, being locally integrable means that `f` is integrable over a neighborhood of every point. Being continuous with compact support means `g` is continuous and it equals zero outside a compact set. And being integrable means that the function is measurable, and that its integral (with respect to the measure `Œº`) over the entire domain of the function is finite.",{"type":"‚àÄ {X : Type u_1} {E : Type u_3} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {Œº : MeasureTheory.Measure X} [inst_3 : NormedSpace ‚Ñù E] [inst_4 : OpensMeasurableSpace X] [inst_5 : T2Space X]\n  {f : X ‚Üí ‚Ñù},\n  MeasureTheory.LocallyIntegrable f Œº ‚Üí\n    ‚àÄ {g : X ‚Üí E}, Continuous g ‚Üí HasCompactSupport g ‚Üí MeasureTheory.Integrable (fun x => f x ‚Ä¢ g x) Œº","name":"MeasureTheory.LocallyIntegrable.integrable_smul_right_of_hasCompactSupport","isProp":true,"docString":"The theorem states that if we have a function `f` that is locally integrable and another function `g` that is continuous with compact support, then the product of `f` and `g` (denoted as `f ‚Ä¢ g`) is integrable. Here, being locally integrable means that `f` is integrable over a neighborhood of every point. Being continuous with compact support means `g` is continuous and it equals zero outside a compact set. And being integrable means that the function is measurable, and that its integral (with respect to the measure `Œº`) over the entire domain of the function is finite.","distance":0.42025632380955102451736138391424901783466339111328125}],["If a function is integrable, then the integral of its truncated versions converges to the\nintegral of the whole function. ",{"type":"‚àÄ {Œ± : Type u_1} {m : MeasurableSpace Œ±} {Œº : MeasureTheory.Measure Œ±} {f : Œ± ‚Üí ‚Ñù},\n  MeasureTheory.Integrable f ‚Üí\n    Filter.Tendsto (fun A => ‚à´ (x : Œ±), ProbabilityTheory.truncation f A x ‚àÇŒº) Filter.atTop (nhds (‚à´ (x : Œ±), f x ‚àÇŒº))","name":"ProbabilityTheory.tendsto_integral_truncation","isProp":true,"docString":"If a function is integrable, then the integral of its truncated versions converges to the\nintegral of the whole function. ","distance":0.3684101753769024600870807262253947556018829345703125}],["A single function is uniformly integrable. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_2} {Œπ : Type u_3} {m : MeasurableSpace Œ±} (Œº : MeasureTheory.Measure Œ±)\n  [inst : NormedAddCommGroup Œ≤] {p : ENNReal} [inst_1 : Subsingleton Œπ],\n  1 ‚â§ p ‚Üí p ‚â† ‚ä§ ‚Üí ‚àÄ {f : Œπ ‚Üí Œ± ‚Üí Œ≤}, (‚àÄ (i : Œπ), MeasureTheory.Mem‚Ñíp (f i) p) ‚Üí MeasureTheory.UnifIntegrable f p Œº","name":"MeasureTheory.unifIntegrable_subsingleton","isProp":true,"docString":"A single function is uniformly integrable. ","distance":0.372422752980228921604322067651082761585712432861328125}],["If a function is locally integrable, then it is integrable on any compact set. ",{"type":"‚àÄ {X : Type u_1} {E : Type u_3} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {f : X ‚Üí E} {Œº : MeasureTheory.Measure X} {k : Set X},\n  MeasureTheory.LocallyIntegrable f ‚Üí IsCompact k ‚Üí MeasureTheory.IntegrableOn f k","name":"MeasureTheory.LocallyIntegrable.integrableOn_isCompact","isProp":true,"docString":"If a function is locally integrable, then it is integrable on any compact set. ","distance":0.37414610989832974841107215979718603193759918212890625}],["Any integrable function can be approximated by bounded continuous functions,\nversion in terms of `‚à´`. ",{"type":"‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±] [inst_1 : TopologicalSpace Œ±] [inst_2 : T4Space Œ±] [inst_3 : BorelSpace Œ±]\n  {E : Type u_2} [inst_4 : NormedAddCommGroup E] {Œº : MeasureTheory.Measure Œ±} [inst_5 : NormedSpace ‚Ñù E]\n  [inst_6 : MeasureTheory.Measure.WeaklyRegular Œº] {f : Œ± ‚Üí E},\n  MeasureTheory.Integrable f ‚Üí ‚àÄ {Œµ : ‚Ñù}, 0 < Œµ ‚Üí ‚àÉ g, ‚à´ (x : Œ±), ‚Äñf x - g x‚Äñ ‚àÇŒº ‚â§ Œµ ‚àß MeasureTheory.Integrable ‚áëg","name":"MeasureTheory.Integrable.exists_boundedContinuous_integral_sub_le","isProp":true,"docString":"Any integrable function can be approximated by bounded continuous functions,\nversion in terms of `‚à´`. ","distance":0.37632003421792659114686330212862230837345123291015625}],["If a function is locally integrable on a compact set, then it is integrable on that set. ",{"type":"‚àÄ {X : Type u_1} {E : Type u_3} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {f : X ‚Üí E} {Œº : MeasureTheory.Measure X} {s : Set X},\n  MeasureTheory.LocallyIntegrableOn f s ‚Üí IsCompact s ‚Üí MeasureTheory.IntegrableOn f s","name":"MeasureTheory.LocallyIntegrableOn.integrableOn_isCompact","isProp":true,"docString":"If a function is locally integrable on a compact set, then it is integrable on that set. ","distance":0.381964787309923503588748872061842121183872222900390625}],["A continuous function with compact support is integrable on the whole space. ",{"type":"‚àÄ {X : Type u_1} {E : Type u_3} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {f : X ‚Üí E} {Œº : MeasureTheory.Measure X} [inst_3 : OpensMeasurableSpace X]\n  [inst_4 : MeasureTheory.IsFiniteMeasureOnCompacts Œº], Continuous f ‚Üí HasCompactSupport f ‚Üí MeasureTheory.Integrable f","name":"Continuous.integrable_of_hasCompactSupport","isProp":true,"docString":"A continuous function with compact support is integrable on the whole space. ","distance":0.382634446585009779795427675708197057247161865234375}],["Simp set for integral rules. ",{"type":"Lean.ParserDescr","name":"Parser.Attr.integral_simps","isProp":false,"docString":"Simp set for integral rules. ","distance":0.38310039197112188968930013288627378642559051513671875}],["A class of almost everywhere equal functions is `Integrable` if its function representative\nis integrable. ",{"type":"{Œ± : Type u_1} ‚Üí\n  {Œ≤ : Type u_2} ‚Üí\n    {m : MeasurableSpace Œ±} ‚Üí {Œº : MeasureTheory.Measure Œ±} ‚Üí [inst : NormedAddCommGroup Œ≤] ‚Üí (Œ± ‚Üí‚Çò[Œº] Œ≤) ‚Üí Prop","name":"MeasureTheory.AEEqFun.Integrable","isProp":false,"docString":"A class of almost everywhere equal functions is `Integrable` if its function representative\nis integrable. ","distance":0.383936903641398596942480025973054580390453338623046875}],["When the right derivative of a function is nonnegative, then it is automatically integrable. ",{"type":"‚àÄ {g' g : ‚Ñù ‚Üí ‚Ñù} {a b : ‚Ñù},\n  ContinuousOn g (Set.Icc a b) ‚Üí\n    (‚àÄ x ‚àà Set.Ioo a b, HasDerivWithinAt g (g' x) (Set.Ioi x) x) ‚Üí\n      (‚àÄ x ‚àà Set.Ioo a b, 0 ‚â§ g' x) ‚Üí MeasureTheory.IntegrableOn g' (Set.Ioc a b)","name":"intervalIntegral.integrableOn_deriv_right_of_nonneg","isProp":true,"docString":"When the right derivative of a function is nonnegative, then it is automatically integrable. ","distance":0.38635541428642306005514228672836907207965850830078125}],["**First moment method**. An integrable function is greater than its integral on a set of\npositive measure. ",{"type":"‚àÄ {Œ± : Type u_1} {m0 : MeasurableSpace Œ±} {Œº : MeasureTheory.Measure Œ±} {f : Œ± ‚Üí ‚Ñù}\n  [inst : MeasureTheory.IsProbabilityMeasure Œº], MeasureTheory.Integrable f ‚Üí 0 < ‚Üë‚ÜëŒº {x | ‚à´ (a : Œ±), f a ‚àÇŒº ‚â§ f x}","name":"MeasureTheory.measure_integral_le_pos","isProp":true,"docString":"**First moment method**. An integrable function is greater than its integral on a set of\npositive measure. ","distance":0.387785004440897973498891815324896015226840972900390625}],["Any integrable function can be approximated by bounded continuous functions,\nversion in terms of `‚à´‚Åª`. ",{"type":"‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±] [inst_1 : TopologicalSpace Œ±] [inst_2 : T4Space Œ±] [inst_3 : BorelSpace Œ±]\n  {E : Type u_2} [inst_4 : NormedAddCommGroup E] {Œº : MeasureTheory.Measure Œ±} [inst_5 : NormedSpace ‚Ñù E]\n  [inst_6 : MeasureTheory.Measure.WeaklyRegular Œº] {f : Œ± ‚Üí E},\n  MeasureTheory.Integrable f ‚Üí\n    ‚àÄ {Œµ : ENNReal}, Œµ ‚â† 0 ‚Üí ‚àÉ g, ‚à´‚Åª (x : Œ±), ‚Üë‚Äñf x - g x‚Äñ‚Çä ‚àÇŒº ‚â§ Œµ ‚àß MeasureTheory.Integrable ‚áëg","name":"MeasureTheory.Integrable.exists_boundedContinuous_lintegral_sub_le","isProp":true,"docString":"Any integrable function can be approximated by bounded continuous functions,\nversion in terms of `‚à´‚Åª`. ","distance":0.390196960831312444906160408208961598575115203857421875}],["Double integrals commute with addition. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_3} {E : Type u_6} [inst : MeasurableSpace Œ±] [inst_1 : MeasurableSpace Œ≤]\n  {Œº : MeasureTheory.Measure Œ±} {ŒΩ : MeasureTheory.Measure Œ≤} [inst_2 : NormedAddCommGroup E]\n  [inst_3 : MeasureTheory.SigmaFinite ŒΩ] [inst_4 : NormedSpace ‚Ñù E] [inst_5 : MeasureTheory.SigmaFinite Œº]\n  ‚¶Éf g : Œ± √ó Œ≤ ‚Üí E‚¶Ñ,\n  MeasureTheory.Integrable f ‚Üí\n    MeasureTheory.Integrable g ‚Üí\n      ‚à´ (x : Œ±), ‚à´ (y : Œ≤), f (x, y) + g (x, y) ‚àÇŒΩ ‚àÇŒº =\n        ‚à´ (x : Œ±), ‚à´ (y : Œ≤), f (x, y) ‚àÇŒΩ ‚àÇŒº + ‚à´ (x : Œ±), ‚à´ (y : Œ≤), g (x, y) ‚àÇŒΩ ‚àÇŒº","name":"MeasureTheory.integral_integral_add","isProp":true,"docString":"Double integrals commute with addition. ","distance":0.3949269714387166896329972587409429252147674560546875}],["The function given in the definition of `torusIntegral` is integrable. ",{"type":"‚àÄ {n : ‚Ñï} {E : Type u_1} [inst : NormedAddCommGroup E] {f : (Fin n ‚Üí ‚ÑÇ) ‚Üí E} {c : Fin n ‚Üí ‚ÑÇ} {R : Fin n ‚Üí ‚Ñù}\n  [inst_1 : NormedSpace ‚ÑÇ E],\n  TorusIntegrable f c R ‚Üí\n    MeasureTheory.IntegrableOn\n      (fun Œ∏ =>\n        (Finset.prod Finset.univ fun i => ‚Üë(R i) * Complex.exp (‚Üë(Œ∏ i) * Complex.I) * Complex.I) ‚Ä¢ f (torusMap c R Œ∏))\n      (Set.Icc 0 fun x => 2 * Real.pi)","name":"TorusIntegrable.function_integrable","isProp":true,"docString":"The function given in the definition of `torusIntegral` is integrable. ","distance":0.395271315464519157334422061467193998396396636962890625}],["A binary function is integrable if the function `y ‚Ü¶ f (x, y)` is integrable for almost every\n`x` and the function `x ‚Ü¶ ‚à´ ‚Äñf (x, y)‚Äñ dy` is integrable. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_3} {E : Type u_6} [inst : MeasurableSpace Œ±] [inst_1 : MeasurableSpace Œ≤]\n  {Œº : MeasureTheory.Measure Œ±} {ŒΩ : MeasureTheory.Measure Œ≤} [inst_2 : NormedAddCommGroup E]\n  [inst_3 : MeasureTheory.SigmaFinite ŒΩ] ‚¶Éf : Œ± √ó Œ≤ ‚Üí E‚¶Ñ,\n  MeasureTheory.AEStronglyMeasurable f (MeasureTheory.Measure.prod Œº ŒΩ) ‚Üí\n    (MeasureTheory.Integrable f ‚Üî\n      (‚àÄ·µê (x : Œ±) ‚àÇŒº, MeasureTheory.Integrable fun y => f (x, y)) ‚àß\n        MeasureTheory.Integrable fun x => ‚à´ (y : Œ≤), ‚Äñf (x, y)‚Äñ ‚àÇŒΩ)","name":"MeasureTheory.integrable_prod_iff","isProp":true,"docString":"A binary function is integrable if the function `y ‚Ü¶ f (x, y)` is integrable for almost every\n`x` and the function `x ‚Ü¶ ‚à´ ‚Äñf (x, y)‚Äñ dy` is integrable. ","distance":0.396212893216459194345446803708910010755062103271484375}],["When the derivative of a function is nonnegative, then it is automatically integrable,\nIoc version. ",{"type":"‚àÄ {g' g : ‚Ñù ‚Üí ‚Ñù} {a b : ‚Ñù},\n  ContinuousOn g (Set.Icc a b) ‚Üí\n    (‚àÄ x ‚àà Set.Ioo a b, HasDerivAt g (g' x) x) ‚Üí\n      (‚àÄ x ‚àà Set.Ioo a b, 0 ‚â§ g' x) ‚Üí MeasureTheory.IntegrableOn g' (Set.Ioc a b)","name":"intervalIntegral.integrableOn_deriv_of_nonneg","isProp":true,"docString":"When the derivative of a function is nonnegative, then it is automatically integrable,\nIoc version. ","distance":0.398518117582631836715023609940544702112674713134765625}],["A binary function is integrable if the function `x ‚Ü¶ f (x, y)` is integrable for almost every\n`y` and the function `y ‚Ü¶ ‚à´ ‚Äñf (x, y)‚Äñ dx` is integrable. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_3} {E : Type u_6} [inst : MeasurableSpace Œ±] [inst_1 : MeasurableSpace Œ≤]\n  {Œº : MeasureTheory.Measure Œ±} {ŒΩ : MeasureTheory.Measure Œ≤} [inst_2 : NormedAddCommGroup E]\n  [inst_3 : MeasureTheory.SigmaFinite ŒΩ] [inst_4 : MeasureTheory.SigmaFinite Œº] ‚¶Éf : Œ± √ó Œ≤ ‚Üí E‚¶Ñ,\n  MeasureTheory.AEStronglyMeasurable f (MeasureTheory.Measure.prod Œº ŒΩ) ‚Üí\n    (MeasureTheory.Integrable f ‚Üî\n      (‚àÄ·µê (y : Œ≤) ‚àÇŒΩ, MeasureTheory.Integrable fun x => f (x, y)) ‚àß\n        MeasureTheory.Integrable fun y => ‚à´ (x : Œ±), ‚Äñf (x, y)‚Äñ ‚àÇŒº)","name":"MeasureTheory.integrable_prod_iff'","isProp":true,"docString":"A binary function is integrable if the function `x ‚Ü¶ f (x, y)` is integrable for almost every\n`y` and the function `y ‚Ü¶ ‚à´ ‚Äñf (x, y)‚Äñ dx` is integrable. ","distance":0.398628789833484431515131518608541227877140045166015625}],["In a locally compact space, any integrable function can be approximated by compactly supported\ncontinuous functions, version in terms of `‚à´`. ",{"type":"‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±] [inst_1 : TopologicalSpace Œ±] [inst_2 : T4Space Œ±] [inst_3 : BorelSpace Œ±]\n  {E : Type u_2} [inst_4 : NormedAddCommGroup E] {Œº : MeasureTheory.Measure Œ±} [inst_5 : NormedSpace ‚Ñù E]\n  [inst_6 : WeaklyLocallyCompactSpace Œ±] [inst_7 : MeasureTheory.Measure.Regular Œº] {f : Œ± ‚Üí E},\n  MeasureTheory.Integrable f ‚Üí\n    ‚àÄ {Œµ : ‚Ñù},\n      0 < Œµ ‚Üí ‚àÉ g, HasCompactSupport g ‚àß ‚à´ (x : Œ±), ‚Äñf x - g x‚Äñ ‚àÇŒº ‚â§ Œµ ‚àß Continuous g ‚àß MeasureTheory.Integrable g","name":"MeasureTheory.Integrable.exists_hasCompactSupport_integral_sub_le","isProp":true,"docString":"In a locally compact space, any integrable function can be approximated by compactly supported\ncontinuous functions, version in terms of `‚à´`. ","distance":0.39887524297119447691528648647363297641277313232421875}],["**Fubini's Theorem** for set integrals. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_3} {E : Type u_6} [inst : MeasurableSpace Œ±] [inst_1 : MeasurableSpace Œ≤]\n  {Œº : MeasureTheory.Measure Œ±} {ŒΩ : MeasureTheory.Measure Œ≤} [inst_2 : NormedAddCommGroup E]\n  [inst_3 : MeasureTheory.SigmaFinite ŒΩ] [inst_4 : NormedSpace ‚Ñù E] [inst_5 : MeasureTheory.SigmaFinite Œº]\n  (f : Œ± √ó Œ≤ ‚Üí E) {s : Set Œ±} {t : Set Œ≤},\n  MeasureTheory.IntegrableOn f (s √óÀ¢ t) ‚Üí\n    ‚à´ (z : Œ± √ó Œ≤) in s √óÀ¢ t, f z ‚àÇMeasureTheory.Measure.prod Œº ŒΩ = ‚à´ (x : Œ±) in s, ‚à´ (y : Œ≤) in t, f (x, y) ‚àÇŒΩ ‚àÇŒº","name":"MeasureTheory.set_integral_prod","isProp":true,"docString":"**Fubini's Theorem** for set integrals. ","distance":0.399288937563819390508257356486865319311618804931640625}]]