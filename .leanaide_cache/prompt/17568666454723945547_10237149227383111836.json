[["The sum of two natural transformations. ",{"type":"{A : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} A] →\n    {B : Type u₁} →\n      [inst_1 : CategoryTheory.Category.{v₁, u₁} B] →\n        {C : Type u₁} →\n          [inst_2 : CategoryTheory.Category.{v₁, u₁} C] →\n            {D : Type u₁} →\n              [inst_3 : CategoryTheory.Category.{v₁, u₁} D] →\n                {F G : CategoryTheory.Functor A B} →\n                  {H I : CategoryTheory.Functor C D} →\n                    (F ⟶ G) → (H ⟶ I) → (CategoryTheory.Functor.sum F H ⟶ CategoryTheory.Functor.sum G I)","name":"CategoryTheory.NatTrans.sum","isProp":false,"docString":"The sum of two natural transformations. ","distance":0.307424474716617879277436031770776025950908660888671875}],[" For all natural numbers `n`, the product of `n` and `n-1` is an even number. Equivalently, the product of two consecutive natural numbers is an even number.",{"type":"∀ (n : ℕ), Even (n * (n - 1))","name":"Nat.even_mul_self_pred","isProp":true,"docString":" For all natural numbers `n`, the product of `n` and `n-1` is an even number. Equivalently, the product of two consecutive natural numbers is an even number.","distance":0.32436102711101499895818278673687018454074859619140625}],["This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.",{"type":"∀ (n : ℕ), Even (n * (n - 1))","name":"Nat.even_mul_self_pred","isProp":true,"docString":"This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.","distance":0.347885725820020030862878002153593115508556365966796875}],["Product of two uniform isomorphisms. ",{"type":"{α : Type u} →\n  {β : Type u_1} →\n    {γ : Type u_2} →\n      {δ : Type u_3} →\n        [inst : UniformSpace α] →\n          [inst_1 : UniformSpace β] →\n            [inst_2 : UniformSpace γ] → [inst_3 : UniformSpace δ] → α ≃ᵤ β → γ ≃ᵤ δ → α × γ ≃ᵤ β × δ","name":"UniformEquiv.prodCongr","isProp":false,"docString":"Product of two uniform isomorphisms. ","distance":0.322877474089084681718730962529662065207958221435546875}],[" For any natural number `n`, the product of `n + 1` and the central binomial coefficient of `n + 1` equals twice the product of `2n + 1` and the central binomial coefficient of `n`. In Lean notation, `(n + 1) * binom (2*n + 1, n + 1) = 2 * (2*n + 1) * binom (2*n, n)`.",{"type":"∀ (n : ℕ), (n + 1) * (n + 1).centralBinom = 2 * (2 * n + 1) * n.centralBinom","name":"Nat.succ_mul_centralBinom_succ","isProp":true,"docString":" For any natural number `n`, the product of `n + 1` and the central binomial coefficient of `n + 1` equals twice the product of `2n + 1` and the central binomial coefficient of `n`. In Lean notation, `(n + 1) * binom (2*n + 1, n + 1) = 2 * (2*n + 1) * binom (2*n, n)`.","distance":0.34389255176801303282019262042012996971607208251953125}],["A natural number `n` is expressed as a sum of two squares if and only if `n` can be written as the product of the square of a natural number `a` and another natural number `b`, such that `-1` is a perfect square in the multiplication group modulo `b`. That is, there exists some `r` such that `(-1) = r * r (mod b)`.",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∃ a b, n = a ^ 2 * b ∧ IsSquare (-1)","name":"Nat.eq_sq_add_sq_iff_eq_sq_mul","isProp":true,"docString":"A natural number `n` is expressed as a sum of two squares if and only if `n` can be written as the product of the square of a natural number `a` and another natural number `b`, such that `-1` is a perfect square in the multiplication group modulo `b`. That is, there exists some `r` such that `(-1) = r * r (mod b)`.","distance":0.34820991837751147368607007592800073325634002685546875}],["The product of two natural numbers is greater than 1 if and only if\nat least one of them is greater than 1 and both are positive. ",{"type":"∀ {m n : ℕ}, 1 < m * n ↔ 0 < m ∧ 0 < n ∧ (1 < m ∨ 1 < n)","name":"Nat.one_lt_mul_iff","isProp":true,"docString":"The product of two natural numbers is greater than 1 if and only if\nat least one of them is greater than 1 and both are positive. ","distance":0.323596491145800191358006259179092012345790863037109375}],["The set of natural numbers that are sums of two squares is closed under multiplication. ",{"type":"∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2","name":"Nat.sq_add_sq_mul","isProp":true,"docString":"The set of natural numbers that are sums of two squares is closed under multiplication. ","distance":0.3271233864186722239963955871644429862499237060546875}],["The cartesian product of two natural isomorphisms. ",{"type":"{A : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} A] →\n    {B : Type u₂} →\n      [inst_1 : CategoryTheory.Category.{v₂, u₂} B] →\n        {C : Type u₃} →\n          [inst_2 : CategoryTheory.Category.{v₃, u₃} C] →\n            {D : Type u₄} →\n              [inst_3 : CategoryTheory.Category.{v₄, u₄} D] →\n                {F F' : CategoryTheory.Functor A B} →\n                  {G G' : CategoryTheory.Functor C D} →\n                    (F ≅ F') → (G ≅ G') → (CategoryTheory.Functor.prod F G ≅ CategoryTheory.Functor.prod F' G')","name":"CategoryTheory.NatIso.prod","isProp":false,"docString":"The cartesian product of two natural isomorphisms. ","distance":0.32758505921077574196687010044115595519542694091796875}],["The cartesian product of two natural transformations. ",{"type":"{A : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} A] →\n    {B : Type u₂} →\n      [inst_1 : CategoryTheory.Category.{v₂, u₂} B] →\n        {C : Type u₃} →\n          [inst_2 : CategoryTheory.Category.{v₃, u₃} C] →\n            {D : Type u₄} →\n              [inst_3 : CategoryTheory.Category.{v₄, u₄} D] →\n                {F G : CategoryTheory.Functor A B} →\n                  {H I : CategoryTheory.Functor C D} →\n                    (F ⟶ G) → (H ⟶ I) → (CategoryTheory.Functor.prod F H ⟶ CategoryTheory.Functor.prod G I)","name":"CategoryTheory.NatTrans.prod","isProp":false,"docString":"The cartesian product of two natural transformations. ","distance":0.32767996305213220598062662247684784233570098876953125}],["Every x greater than or equal to 1 is between two successive\nnatural-number powers of every y greater than one. ",{"type":"∀ {α : Type u_1} [inst : LinearOrderedSemiring α] [inst_1 : Archimedean α] [inst_2 : ExistsAddOfLE α] {x y : α},\n  1 ≤ x → 1 < y → ∃ n, y ^ n ≤ x ∧ x < y ^ (n + 1)","name":"exists_nat_pow_near","isProp":true,"docString":"Every x greater than or equal to 1 is between two successive\nnatural-number powers of every y greater than one. ","distance":0.3293858793566115661377580181579105556011199951171875}],["Two positive naturals are equal if their prime padic valuations are equal ",{"type":"∀ (a b : ℕ), a ≠ 0 → b ≠ 0 → (a = b ↔ ∀ (p : ℕ), Nat.Prime p → padicValNat p a = padicValNat p b)","name":"Nat.eq_iff_prime_padicValNat_eq","isProp":true,"docString":"Two positive naturals are equal if their prime padic valuations are equal ","distance":0.332682585097705929566558324950165115296840667724609375}],["Multiplication by a natural number. ",{"type":"{M : Type u} → [self : AddMonoid M] → ℕ → M → M","name":"AddMonoid.nsmul","isProp":false,"docString":"Multiplication by a natural number. ","distance":0.335324417829631460374883999975281767547130584716796875}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.340270847198936798871926612264360301196575164794921875}],["The product of the prime factors of `n` that are less than `N` is an `N`-smooth number. ",{"type":"∀ (n N : ℕ), List.prod (List.filter (fun x => decide (x < N)) (Nat.factors n)) ∈ Nat.smoothNumbers N","name":"Nat.prod_mem_smoothNumbers","isProp":true,"docString":"The product of the prime factors of `n` that are less than `N` is an `N`-smooth number. ","distance":0.34280413015887656325020316216978244483470916748046875}],["Product of two homeomorphisms. ",{"type":"{X : Type u_1} →\n  {Y : Type u_2} →\n    [inst : TopologicalSpace X] →\n      [inst_1 : TopologicalSpace Y] →\n        {X' : Type u_4} →\n          {Y' : Type u_5} →\n            [inst_2 : TopologicalSpace X'] → [inst_3 : TopologicalSpace Y'] → X ≃ₜ X' → Y ≃ₜ Y' → X × Y ≃ₜ X' × Y'","name":"Homeomorph.prodCongr","isProp":false,"docString":"Product of two homeomorphisms. ","distance":0.3463159435326563784229847442475147545337677001953125}],["Expressing the product of two polynomials as a double sum. ",{"type":"∀ {R : Type u} [inst : Semiring R] {p q : Polynomial R},\n  p * q =\n    Finset.sum (Polynomial.support p) fun i =>\n      Polynomial.sum q fun j a => (Polynomial.monomial (i + j)) (Polynomial.coeff p i * a)","name":"Polynomial.mul_eq_sum_sum","isProp":true,"docString":"Expressing the product of two polynomials as a double sum. ","distance":0.347213570337223609296728454864933155477046966552734375}],["Scalar multiplication together with taking a natural number power. ",{"type":"{S : Type u_1} →\n  [inst : AddCommMonoid S] →\n    [inst_1 : Pow S ℕ] → S → {R : Type u_2} → [inst_2 : Semiring R] → [inst : MulActionWithZero R S] → ℕ → R → S","name":"Polynomial.smul_pow","isProp":false,"docString":"Scalar multiplication together with taking a natural number power. ","distance":0.347308588098213355532806190240080468356609344482421875}],["The prime factors of a natural number as a finset. ",{"type":"ℕ → Finset ℕ","name":"Nat.primeFactors","isProp":false,"docString":"The prime factors of a natural number as a finset. ","distance":0.347336671018567189062054012538283132016658782958984375}],["Two natural numbers are equal if and only if they have the same multiples. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n","name":"Nat.dvd_right_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same multiples. ","distance":0.35032022342456958785561482727644033730030059814453125}],["The divisors of a product of natural numbers are the pointwise product of the divisors of the\nfactors. ",{"type":"∀ (m n : ℕ), Nat.divisors (m * n) = Nat.divisors m * Nat.divisors n","name":"Nat.divisors_mul","isProp":true,"docString":"The divisors of a product of natural numbers are the pointwise product of the divisors of the\nfactors. ","distance":0.352150170578385990349801204502000473439693450927734375}],["Subtraction of two natural numbers. ",{"type":"ℕ → ℕ → ℤ","name":"Int.subNatNat","isProp":false,"docString":"Subtraction of two natural numbers. ","distance":0.3546676688584255998648586682975292205810546875}],["Product of two kernels. This is meaningful only when the kernels are s-finite. ",{"type":"{α : Type u_1} →\n  {β : Type u_2} →\n    {mα : MeasurableSpace α} →\n      {mβ : MeasurableSpace β} →\n        {γ : Type u_4} →\n          {mγ : MeasurableSpace γ} →\n            ↥(ProbabilityTheory.kernel α β) → ↥(ProbabilityTheory.kernel α γ) → ↥(ProbabilityTheory.kernel α (β × γ))","name":"ProbabilityTheory.kernel.prod","isProp":false,"docString":"Product of two kernels. This is meaningful only when the kernels are s-finite. ","distance":0.355710066946392344799932061505387537181377410888671875}],["Notation for the product ",{"type":"Lean.TrailingParserDescr","name":"CategoryTheory.Limits.«term_⨯_»","isProp":false,"docString":"Notation for the product ","distance":0.355930198713168610691326421147095970809459686279296875}]]