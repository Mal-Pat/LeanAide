[["A product of measures in `tprod α l`. ",{"type":"{δ : Type u_4} →\n  {π : δ → Type u_5} →\n    [inst : (x : δ) → MeasurableSpace (π x)] →\n      (l : List δ) → ((i : δ) → MeasureTheory.Measure (π i)) → MeasureTheory.Measure (List.TProd π l)","name":"MeasureTheory.Measure.tprod","isProp":false,"docString":"A product of measures in `tprod α l`. ","distance":0.23684957384449045747487616608850657939910888671875}],[" For any commutative monoid M and finite sets s and t, the function product of a function from the disjoint union of s and t to M equals the function product of the restrictions of the function to s and t.",{"type":"∀ {α : Type u_3} {β : Type u_4} {γ : Type u_5} [inst : CommMonoid β] (s : Finset α) (t : Finset γ) (f : α ⊕ γ → β),\n  ((s.disjSum t).prod fun x => f x) = (s.prod fun x => f (Sum.inl x)) * t.prod fun x => f (Sum.inr x)","name":"Finset.prod_disj_sum","isProp":true,"docString":" For any commutative monoid M and finite sets s and t, the function product of a function from the disjoint union of s and t to M equals the function product of the restrictions of the function to s and t.","distance":0.35831902192398745743417975972988642752170562744140625}],["This theorem states that given `t`, a finite set of pairwise disjoint finite sets, and `f` a function from a type `α` to a type `M` (where `M` forms a commutative monoid), the product of `f(a)` for all `a` in the union of `t` is equivalent to the product, over each set `s` in `t`, of the product of `f(a)` over all `a` in `s`. In essence, this theorem is expressing a rule of rearrangement for the finite product operation (denoted as `finprod`) under certain conditions.",{"type":"∀ {α : Type u_1} {M : Type u_5} [inst : CommMonoid M] {f : α → M} {t : Set (Set α)},\n  t.PairwiseDisjoint id →\n    t.Finite →\n      (∀ x ∈ t, x.Finite) →\n        (finprod fun a => finprod fun h => f a) =\n          finprod fun s => finprod fun h => finprod fun a => finprod fun h => f a","name":"finprod_mem_sUnion","isProp":true,"docString":"This theorem states that given `t`, a finite set of pairwise disjoint finite sets, and `f` a function from a type `α` to a type `M` (where `M` forms a commutative monoid), the product of `f(a)` for all `a` in the union of `t` is equivalent to the product, over each set `s` in `t`, of the product of `f(a)` over all `a` in `s`. In essence, this theorem is expressing a rule of rearrangement for the finite product operation (denoted as `finprod`) under certain conditions.","distance":0.33841146873042149412214030235190875828266143798828125}],["the equivalence given by multiplication on the left by `t`  ",{"type":"{G : Type u_1} →\n  [inst : Group G] →\n    {A B : Subgroup G} →\n      ↥A ≃* ↥B →\n        {d : HNNExtension.NormalWord.TransversalPair G A B} → HNNExtension.NormalWord d ≃ HNNExtension.NormalWord d","name":"HNNExtension.NormalWord.unitsSMulEquiv","isProp":false,"docString":"the equivalence given by multiplication on the left by `t`  ","distance":0.25738052751286433217359217451303265988826751708984375}],[" For any commutative monoid β, given finite sets s:Γ and t:α, and a function f:γ × α → β, the product of f over the Cartesian product of s and t is equal to the product of f over each element in s and the product of f over each element in t. In other words, (∏ i in s ∏ j in t) f i j = ∏ i in s ∏ j in t f i j.",{"type":"∀ {α : Type u_3} {β : Type u_4} {γ : Type u_5} [inst : CommMonoid β] {s : Finset γ} {t : Finset α} {f : γ → α → β},\n  ((s ×ˢ t).prod fun x => f x.1 x.2) = s.prod fun x => t.prod fun y => f x y","name":"Finset.prod_product'","isProp":true,"docString":" For any commutative monoid β, given finite sets s:Γ and t:α, and a function f:γ × α → β, the product of f over the Cartesian product of s and t is equal to the product of f over each element in s and the product of f over each element in t. In other words, (∏ i in s ∏ j in t) f i j = ∏ i in s ∏ j in t f i j.","distance":0.359506227441485581852731456820038147270679473876953125}],["This theorem states that for a given finite set `t` and a subset `s` of `t`, the product of `f(i)` for each `i` in `s`, multiplied by the product of `f(i)` for each `i` in `t` but not in `s`, is equal to the product of `f(i)` for each `i` in `t`. Here `f` is a function from an arbitrary type `α` to a commutative monoid `M`. The subset relationship is denoted as `s ⊆ t`. The \"product of `f(i)` over a set\" is represented by `finprod` function in the theorem statement.",{"type":"∀ {α : Type u_1} {M : Type u_5} [inst : CommMonoid M] {f : α → M} {s t : Set α},\n  s ⊆ t →\n    t.Finite →\n      ((finprod fun i => finprod fun h => f i) * finprod fun i => finprod fun h => f i) =\n        finprod fun i => finprod fun h => f i","name":"finprod_mem_mul_diff","isProp":true,"docString":"This theorem states that for a given finite set `t` and a subset `s` of `t`, the product of `f(i)` for each `i` in `s`, multiplied by the product of `f(i)` for each `i` in `t` but not in `s`, is equal to the product of `f(i)` for each `i` in `t`. Here `f` is a function from an arbitrary type `α` to a commutative monoid `M`. The subset relationship is denoted as `s ⊆ t`. The \"product of `f(i)` over a set\" is represented by `finprod` function in the theorem statement.","distance":0.340896275574779805683789390968740917742252349853515625}],["The product of a set on the real axis and a set on the imaginary axis of the complex plane,\ndenoted by `s ×ℂ t`. ",{"type":"Set ℝ → Set ℝ → Set ℂ","name":"Complex.Set.reProdIm","isProp":false,"docString":"The product of a set on the real axis and a set on the imaginary axis of the complex plane,\ndenoted by `s ×ℂ t`. ","distance":0.293408539222535347246179071589722298085689544677734375}],["The `t` coefficient of an admissible linear change of variables. ",{"type":"{R : Type u} → [inst : CommRing R] → WeierstrassCurve.VariableChange R → R","name":"WeierstrassCurve.VariableChange.t","isProp":false,"docString":"The `t` coefficient of an admissible linear change of variables. ","distance":0.29981791201074392549941194374696351587772369384765625}],["Notation for the product ",{"type":"Lean.TrailingParserDescr","name":"CategoryTheory.Limits.«term_⨯_»","isProp":false,"docString":"Notation for the product ","distance":0.300739378009566682425912631515529938042163848876953125}],["Tensor products distribute over a product on the left . ",{"type":"(R : Type uR) →\n  (M₁ : Type uM₁) →\n    (M₂ : Type uM₂) →\n      (M₃ : Type uM₃) →\n        [inst : CommSemiring R] →\n          [inst_1 : AddCommMonoid M₁] →\n            [inst_2 : AddCommMonoid M₂] →\n              [inst_3 : AddCommMonoid M₃] →\n                [inst_4 : Module R M₁] →\n                  [inst_5 : Module R M₂] →\n                    [inst_6 : Module R M₃] →\n                      TensorProduct R (M₁ × M₂) M₃ ≃ₗ[R] TensorProduct R M₁ M₃ × TensorProduct R M₂ M₃","name":"TensorProduct.prodLeft","isProp":false,"docString":"Tensor products distribute over a product on the left . ","distance":0.30290438778721651136294212847133167088031768798828125}],["Tensor products distribute over a product on the right. ",{"type":"(R : Type uR) →\n  (M₁ : Type uM₁) →\n    (M₂ : Type uM₂) →\n      (M₃ : Type uM₃) →\n        [inst : CommSemiring R] →\n          [inst_1 : AddCommMonoid M₁] →\n            [inst_2 : AddCommMonoid M₂] →\n              [inst_3 : AddCommMonoid M₃] →\n                [inst_4 : Module R M₁] →\n                  [inst_5 : Module R M₂] →\n                    [inst_6 : Module R M₃] →\n                      TensorProduct R M₁ (M₂ × M₃) ≃ₗ[R] TensorProduct R M₁ M₂ × TensorProduct R M₁ M₃","name":"TensorProduct.prodRight","isProp":false,"docString":"Tensor products distribute over a product on the right. ","distance":0.3041026264307207238601904464303515851497650146484375}],["The product of a neighborhood of `s` and a neighborhood of `t` is a neighborhood of `s ×ˢ t`,\nformulated in terms of a filter inequality. ",{"type":"∀ {X : Type u_5} {Y : Type u_6} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] (s : Set X) (t : Set Y),\n  nhdsSet (s ×ˢ t) ≤ nhdsSet s ×ˢ nhdsSet t","name":"nhdsSet_prod_le","isProp":true,"docString":"The product of a neighborhood of `s` and a neighborhood of `t` is a neighborhood of `s ×ˢ t`,\nformulated in terms of a filter inequality. ","distance":0.307112453533241402947595588557305745780467987060546875}],["`product s t` is the set of pairs `(a, b)` such that `a ∈ s` and `b ∈ t`. ",{"type":"{α : Type u_1} → {β : Type u_2} → Finset α → Finset β → Finset (α × β)","name":"Finset.product","isProp":false,"docString":"`product s t` is the set of pairs `(a, b)` such that `a ∈ s` and `b ∈ t`. ","distance":0.308233160123510041561445405022823251783847808837890625}],["The product of the factors is the original number ",{"type":"∀ (n : ℕ+), PrimeMultiset.prod (PNat.factorMultiset n) = n","name":"PNat.prod_factorMultiset","isProp":true,"docString":"The product of the factors is the original number ","distance":0.312759590672791409904363035821006633341312408447265625}],["A product of sets in `TProd α l`. ",{"type":"{ι : Type u} → {α : ι → Type v} → (l : List ι) → ((i : ι) → Set (α i)) → Set (List.TProd α l)","name":"Set.tprod","isProp":false,"docString":"A product of sets in `TProd α l`. ","distance":0.31838215165347472090928704346879385411739349365234375}],["The pointwise product of two finsets `s` and `t`: `s • t = {x • y | x ∈ s, y ∈ t}`. ",{"type":"{α : Type u_2} → {β : Type u_3} → [inst : DecidableEq β] → [inst : SMul α β] → SMul (Finset α) (Finset β)","name":"Finset.smul","isProp":false,"docString":"The pointwise product of two finsets `s` and `t`: `s • t = {x • y | x ∈ s, y ∈ t}`. ","distance":0.31940948551676395794629570445977151393890380859375}],["The tensor product of two holors. ",{"type":"{α : Type} → {ds₁ ds₂ : List ℕ} → [inst : Mul α] → Holor α ds₁ → Holor α ds₂ → Holor α (ds₁ ++ ds₂)","name":"Holor.mul","isProp":false,"docString":"The tensor product of two holors. ","distance":0.324365626063382261889955771039240062236785888671875}],["Given a finite set `t` and a subset `s` of `t`, the product of `f i` over `i ∈ s`\ntimes the product of `f i` over `t \\ s` equals the product of `f i` over `i ∈ t`. ",{"type":"∀ {α : Type u_1} {M : Type u_5} [inst : CommMonoid M] {f : α → M} {s t : Set α},\n  s ⊆ t →\n    Set.Finite t →\n      ((finprod fun i => finprod fun h => f i) * finprod fun i => finprod fun h => f i) =\n        finprod fun i => finprod fun h => f i","name":"finprod_mem_mul_diff","isProp":true,"docString":"Given a finite set `t` and a subset `s` of `t`, the product of `f i` over `i ∈ s`\ntimes the product of `f i` over `t \\ s` equals the product of `f i` over `i ∈ t`. ","distance":0.33101342049698512237654313139501027762889862060546875}],["If `t` is a finite set of pairwise disjoint finite sets, then the product of `f a`\nover `a ∈ ⋃₀ t` is the product over `s ∈ t` of the products of `f a` over `a ∈ s`. ",{"type":"∀ {α : Type u_1} {M : Type u_5} [inst : CommMonoid M] {f : α → M} {t : Set (Set α)},\n  Set.PairwiseDisjoint t id →\n    Set.Finite t →\n      (∀ x ∈ t, Set.Finite x) →\n        (finprod fun a => finprod fun h => f a) =\n          finprod fun s => finprod fun h => finprod fun a => finprod fun h => f a","name":"finprod_mem_sUnion","isProp":true,"docString":"If `t` is a finite set of pairwise disjoint finite sets, then the product of `f a`\nover `a ∈ ⋃₀ t` is the product over `s ∈ t` of the products of `f a` over `a ∈ s`. ","distance":0.332577972974185065435648311904515139758586883544921875}],["An inner product with a sum on the right. ",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {ι : Type u_4} (s : Finset ι) (f : ι → E) (x : E), ⟪x, Finset.sum s fun i => f i⟫_𝕜 = Finset.sum s fun i => ⟪x, f i⟫_𝕜","name":"inner_sum","isProp":true,"docString":"An inner product with a sum on the right. ","distance":0.3331634550610249601021450871485285460948944091796875}],["An arbitrary product `e C i₁ * e C i₂ * ... * e C iᵣ` is in the ℤ-span of the good products. ",{"type":"∀ {I : Type u} [inst : LinearOrder I] [inst_1 : IsWellOrder I fun x x_1 => x < x_1] (C : Set (I → Bool))\n  (l : Profinite.NobelingProof.Products I),\n  Profinite.NobelingProof.Products.eval C l ∈ Submodule.span ℤ (Set.range (Profinite.NobelingProof.GoodProducts.eval C))","name":"Profinite.NobelingProof.Products.eval_mem_span_goodProducts","isProp":true,"docString":"An arbitrary product `e C i₁ * e C i₂ * ... * e C iᵣ` is in the ℤ-span of the good products. ","distance":0.333889621864406349605047807926894165575504302978515625}],["An inner product with a sum on the left. ",{"type":"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {ι : Type u_4} (s : Finset ι) (f : ι → E) (x : E), ⟪Finset.sum s fun i => f i, x⟫_𝕜 = Finset.sum s fun i => ⟪f i, x⟫_𝕜","name":"sum_inner","isProp":true,"docString":"An inner product with a sum on the left. ","distance":0.3355493531777804516735841389163397252559661865234375}],["Product of two rings is a ring. ",{"type":"{R : Type u_3} → {S : Type u_5} → [inst : Ring R] → [inst : Ring S] → Ring (R × S)","name":"Prod.instRing","isProp":false,"docString":"Product of two rings is a ring. ","distance":0.33579044313043748815061917412094771862030029296875}],["The cartesian product `s ×ˢ t` is the set of `(a, b)` such that `a ∈ s` and `b ∈ t`. ",{"type":"Lean.TrailingParserDescr","name":"«term_×ˢ_»","isProp":false,"docString":"The cartesian product `s ×ˢ t` is the set of `(a, b)` such that `a ∈ s` and `b ∈ t`. ","distance":0.335816272209940869242217331702704541385173797607421875}]]