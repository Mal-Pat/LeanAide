[["Greatest common divisor of a finite set ",{"type":"{α : Type u_1} →\n  {β : Type u_2} → [inst : CancelCommMonoidWithZero α] → [inst : NormalizedGCDMonoid α] → Finset β → (β → α) → α","name":"Finset.gcd","isProp":false,"docString":"Greatest common divisor of a finite set ","distance":0.308559601003795813678465265184058807790279388427734375}],[" For any prime number `p` and `x` in the `p`-adic integers ring `ℤ_[p]`, the difference between `x` and the reduction of `x` modulo `p` lies in the maximal ideal of `ℤ_[p]`.",{"type":"∀ {p : ℕ} [hp_prime : Fact p.Prime] (x : ℤ_[p]), x - (PadicInt.toZMod x).cast ∈ LocalRing.maximalIdeal ℤ_[p]","name":"PadicInt.toZMod_spec","isProp":true,"docString":" For any prime number `p` and `x` in the `p`-adic integers ring `ℤ_[p]`, the difference between `x` and the reduction of `x` modulo `p` lies in the maximal ideal of `ℤ_[p]`.","distance":0.3922459060486895854324984611594118177890777587890625}],["The theorem `Int.gcd_dvd_left` states that for any two integers `a` and `b`, the greatest common divisor (gcd) of `a` and `b` divides `a`. This is written in the Lean theorem prover as `↑(Int.gcd a b) ∣ a`, where `Int.gcd a b` computes the gcd of `a` and `b`, the `↑` operator converts that gcd from a natural number to an integer, and `∣` represents the \"divides\" relation. In mathematical terms, if $gcd(a, b) = d$, then $d | a$.",{"type":"∀ {a b : ℤ}, ↑(a.gcd b) ∣ a","name":"Int.gcd_dvd_left","isProp":true,"docString":"The theorem `Int.gcd_dvd_left` states that for any two integers `a` and `b`, the greatest common divisor (gcd) of `a` and `b` divides `a`. This is written in the Lean theorem prover as `↑(Int.gcd a b) ∣ a`, where `Int.gcd a b` computes the gcd of `a` and `b`, the `↑` operator converts that gcd from a natural number to an integer, and `∣` represents the \"divides\" relation. In mathematical terms, if $gcd(a, b) = d$, then $d | a$.","distance":0.377947539113538344413001368593540973961353302001953125}],["Greatest common divisor of a multiset ",{"type":"{α : Type u_1} → [inst : CancelCommMonoidWithZero α] → [inst : NormalizedGCDMonoid α] → Multiset α → α","name":"Multiset.gcd","isProp":false,"docString":"Greatest common divisor of a multiset ","distance":0.33847047075678149408162198596983216702938079833984375}],[" In a Euclidean domain with decidable equality, the greatest common divisor of any two elements divides the first element.",{"type":"∀ {R : Type u} [inst : EuclideanDomain R] [inst_1 : DecidableEq R] (a b : R), EuclideanDomain.gcd a b ∣ a","name":"EuclideanDomain.gcd_dvd_left","isProp":true,"docString":" In a Euclidean domain with decidable equality, the greatest common divisor of any two elements divides the first element.","distance":0.3936346544070712383245336241088807582855224609375}],["The theorem `Nat.bodd_add_div2` states that for any natural number `n`, if `n` is odd (determined by `Nat.bodd n`), then adding `1` to twice the greatest integer smaller than `n/2` (`2 * Nat.div2 n`) gives `n` itself. If `n` is not odd (i.e., even), then adding `0` to twice of `⌊n/2⌋` still gives `n`. Essentially, this theorem is expressing an integer as the sum of an odd/even indicator (1 or 0) and twice a rounded-down half.",{"type":"∀ (n : ℕ), (bif n.bodd then 1 else 0) + 2 * n.div2 = n","name":"Nat.bodd_add_div2","isProp":true,"docString":"The theorem `Nat.bodd_add_div2` states that for any natural number `n`, if `n` is odd (determined by `Nat.bodd n`), then adding `1` to twice the greatest integer smaller than `n/2` (`2 * Nat.div2 n`) gives `n` itself. If `n` is not odd (i.e., even), then adding `0` to twice of `⌊n/2⌋` still gives `n`. Essentially, this theorem is expressing an integer as the sum of an odd/even indicator (1 or 0) and twice a rounded-down half.","distance":0.380018465824271067798889589539612643420696258544921875}],["**Lifting the exponent lemma** for odd primes. ",{"type":"∀ {p : ℕ},\n  Nat.Prime p →\n    Odd p →\n      ∀ {x y : ℤ},\n        ↑p ∣ x - y →\n          ¬↑p ∣ x → ∀ (n : ℕ), multiplicity (↑p) (x ^ n - y ^ n) = multiplicity (↑p) (x - y) + multiplicity p n","name":"multiplicity.Int.pow_sub_pow","isProp":true,"docString":"**Lifting the exponent lemma** for odd primes. ","distance":0.35441576483874948078067745882435701787471771240234375}],["The greatest common divisor between two elements. ",{"type":"{α : Type u_2} → [inst : CancelCommMonoidWithZero α] → [self : GCDMonoid α] → α → α → α","name":"GCDMonoid.gcd","isProp":false,"docString":"The greatest common divisor between two elements. ","distance":0.36307909721966347138533137695048935711383819580078125}],["The GCD is a divisor of the first element. ",{"type":"∀ {α : Type u_2} [inst : CancelCommMonoidWithZero α] [self : GCDMonoid α] (a b : α), gcd a b ∣ a","name":"GCDMonoid.gcd_dvd_left","isProp":true,"docString":"The GCD is a divisor of the first element. ","distance":0.3633541337925787484408601812901906669139862060546875}],["No zero divisors. ",{"type":"∀ {α : Type u_2} [self : CanonicallyOrderedCommSemiring α] {a b : α}, a * b = 0 → a = 0 ∨ b = 0","name":"CanonicallyOrderedCommSemiring.eq_zero_or_eq_zero_of_mul_eq_zero","isProp":true,"docString":"No zero divisors. ","distance":0.364095336520042833772237145240069366991519927978515625}],["Nonzero divisors have valuation greater than zero. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\n  (v : IsDedekindDomain.HeightOneSpectrum R) (x : ↥(nonZeroDivisors R)),\n  0 < IsDedekindDomain.HeightOneSpectrum.intValuationDef v ↑x","name":"IsDedekindDomain.HeightOneSpectrum.int_valuation_zero_le","isProp":true,"docString":"Nonzero divisors have valuation greater than zero. ","distance":0.3664683726723365619903916012845002114772796630859375}],["Any common divisor of both elements is a divisor of the GCD. ",{"type":"∀ {α : Type u_2} [inst : CancelCommMonoidWithZero α] [self : GCDMonoid α] {a b c : α}, a ∣ c → a ∣ b → a ∣ gcd c b","name":"GCDMonoid.dvd_gcd","isProp":true,"docString":"Any common divisor of both elements is a divisor of the GCD. ","distance":0.36654662436773433054071347214630804955959320068359375}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.3706621399339573574849282522336579859256744384765625}],["The greatest common divisor (gcd) of two positive natural numbers,\nviewed as positive natural number. ",{"type":"ℕ+ → ℕ+ → ℕ+","name":"PNat.gcd","isProp":false,"docString":"The greatest common divisor (gcd) of two positive natural numbers,\nviewed as positive natural number. ","distance":0.370971981368097558640073430069605819880962371826171875}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.3748990241800280731609973372542299330234527587890625}],["The divisors of a product of natural numbers are the pointwise product of the divisors of the\nfactors. ",{"type":"∀ (m n : ℕ), Nat.divisors (m * n) = Nat.divisors m * Nat.divisors n","name":"Nat.divisors_mul","isProp":true,"docString":"The divisors of a product of natural numbers are the pointwise product of the divisors of the\nfactors. ","distance":0.376984224940421774885379591069067828357219696044921875}],["The GCD is a divisor of the second element. ",{"type":"∀ {α : Type u_2} [inst : CancelCommMonoidWithZero α] [self : GCDMonoid α] (a b : α), gcd a b ∣ b","name":"GCDMonoid.gcd_dvd_right","isProp":true,"docString":"The GCD is a divisor of the second element. ","distance":0.378729552553889570187806157264276407659053802490234375}],["Least common multiple of a finite set ",{"type":"{α : Type u_1} →\n  {β : Type u_2} → [inst : CancelCommMonoidWithZero α] → [inst : NormalizedGCDMonoid α] → Finset β → (β → α) → α","name":"Finset.lcm","isProp":false,"docString":"Least common multiple of a finite set ","distance":0.3805086816275207173276839967002160847187042236328125}],["The modulus of (uniform) continuity for `f`, chosen so `|f x - f y| < ε/2` when `|x - y| < δ`.\n",{"type":"C(↑unitInterval, ℝ) → (ε : ℝ) → 0 < ε → ℝ","name":"bernsteinApproximation.δ","isProp":false,"docString":"The modulus of (uniform) continuity for `f`, chosen so `|f x - f y| < ε/2` when `|x - y| < δ`.\n","distance":0.382678905844279826364839891539304517209529876708984375}],["For `d ∣ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ",{"type":"∀ {n d : ℕ}, d ∣ n → Nat.totient (n / d) = (Finset.filter (fun k => Nat.gcd n k = d) (Finset.range n)).card","name":"Nat.totient_div_of_dvd","isProp":true,"docString":"For `d ∣ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ","distance":0.384921979552807991264984366353019140660762786865234375}],["Nonzero divisors have nonzero valuation. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\n  (v : IsDedekindDomain.HeightOneSpectrum R) (x : ↥(nonZeroDivisors R)),\n  IsDedekindDomain.HeightOneSpectrum.intValuationDef v ↑x ≠ 0","name":"IsDedekindDomain.HeightOneSpectrum.int_valuation_ne_zero'","isProp":true,"docString":"Nonzero divisors have nonzero valuation. ","distance":0.385196521436345140632084849130478687584400177001953125}],["Discriminant of a quadratic ",{"type":"{R : Type u_1} → [inst : Ring R] → R → R → R → R","name":"discrim","isProp":false,"docString":"Discriminant of a quadratic ","distance":0.385231907955972230350738527704379521310329437255859375}],["The proposition that a sequence indexed by integers is a divisibility sequence. ",{"type":"{R : Type u} → [inst : CommRing R] → (ℤ → R) → Prop","name":"IsDivSequence","isProp":false,"docString":"The proposition that a sequence indexed by integers is a divisibility sequence. ","distance":0.3863598458087678100270068171084858477115631103515625}],["An arbitrarily chosen modulus of uniform continuity for a given function `f` and `ε > 0`. ",{"type":"{α : Type u_1} →\n  {β : Type u_2} →\n    [inst : MetricSpace α] → [inst_1 : CompactSpace α] → [inst_2 : MetricSpace β] → C(α, β) → (ε : ℝ) → 0 < ε → ℝ","name":"ContinuousMap.modulus","isProp":false,"docString":"An arbitrarily chosen modulus of uniform continuity for a given function `f` and `ε > 0`. ","distance":0.38641574083573448916695269872434437274932861328125}]]