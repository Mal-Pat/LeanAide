[["Ordinal games are numeric. ",{"type":"∀ (o : Ordinal.{u_1}), SetTheory.PGame.Numeric (Ordinal.toPGame o)","name":"SetTheory.PGame.numeric_toPGame","isProp":true,"docString":"Ordinal games are numeric. ","distance":0.366588860071516864369556287783780135214328765869140625}],[" The sum of two natural numbers is even if and only if both numbers are even or both are odd.",{"type":"∀ {m n : ℕ}, Even (m + n) ↔ (Even m ↔ Even n)","name":"Nat.even_add","isProp":true,"docString":" The sum of two natural numbers is even if and only if both numbers are even or both are odd.","distance":0.406384365141482295502584065616247244179248809814453125}],["This theorem states that for all natural numbers `m` and `n`, the sum `m + n` is even if and only if `m` and `n` are both even or both odd. In other words, the parity of the sum of two natural numbers is the same as the parity of the individual numbers. Here, `Even` is a property of a number that is defined to be true if the number can be expressed as the sum of two equal numbers.",{"type":"∀ {m n : ℕ}, Even (m + n) ↔ (Even m ↔ Even n)","name":"Nat.even_add","isProp":true,"docString":"This theorem states that for all natural numbers `m` and `n`, the sum `m + n` is even if and only if `m` and `n` are both even or both odd. In other words, the parity of the sum of two natural numbers is the same as the parity of the individual numbers. Here, `Even` is a property of a number that is defined to be true if the number can be expressed as the sum of two equal numbers.","distance":0.44106166799964163782732384788687340915203094482421875}],["The convolution of two even functions is also even. ",{"type":"∀ {𝕜 : Type u𝕜} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G → E} {g : G → E'} {x : G}\n  [inst_3 : NontriviallyNormedField 𝕜] [inst_4 : NormedSpace 𝕜 E] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : NormedSpace 𝕜 F]\n  (L : E →L[𝕜] E' →L[𝕜] F) [inst_7 : MeasurableSpace G] {μ : MeasureTheory.Measure G} [inst_8 : NormedSpace ℝ F]\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant μ]\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant μ] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\n  (∀ᵐ (x : G) ∂μ, f (-x) = f x) → (∀ᵐ (x : G) ∂μ, g (-x) = g x) → convolution f g L (-x) = convolution f g L x","name":"convolution_neg_of_neg_eq","isProp":true,"docString":"The convolution of two even functions is also even. ","distance":0.377991495259064447242991491293651051819324493408203125}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.4155168583170179008590139346779324114322662353515625}],["This theorem, `Mathlib.Data.Int.Parity._auxLemma.19`, states that the integer 1 is not even. In the context of this theorem, a number is defined as even if it can be expressed as the sum of two identical numbers. However, there is no integer that, when doubled, equals 1, hence 1 is not considered even under this definition.",{"type":"∀ {α : Sort u_1} {a b : α}, (a = b) = (b = a)","name":"Mathlib.Data.Int.Parity._auxLemma.19","isProp":true,"docString":"This theorem, `Mathlib.Data.Int.Parity._auxLemma.19`, states that the integer 1 is not even. In the context of this theorem, a number is defined as even if it can be expressed as the sum of two identical numbers. However, there is no integer that, when doubled, equals 1, hence 1 is not considered even under this definition.","distance":0.448629105769110136936461685763788409531116485595703125}],["Two natural numbers are equal if and only if they have the same multiples. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n","name":"Nat.dvd_right_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same multiples. ","distance":0.3863052093146535082013315332005731761455535888671875}],["The tails are equal ",{"type":"∀ {F : PFunctor.{u}} {R : PFunctor.M F → PFunctor.M F → Prop},\n  PFunctor.M.IsBisimulation R →\n    ∀ {a : F.A} {f f' : PFunctor.B F a → PFunctor.M F},\n      R (PFunctor.M.mk { fst := a, snd := f }) (PFunctor.M.mk { fst := a, snd := f' }) →\n        ∀ (i : PFunctor.B F a), R (f i) (f' i)","name":"PFunctor.M.IsBisimulation.tail","isProp":true,"docString":"The tails are equal ","distance":0.387780404748440943318854579047183506190776824951171875}],["Pairing function for the natural numbers. ",{"type":"ℕ → ℕ → ℕ","name":"Nat.pair","isProp":false,"docString":"Pairing function for the natural numbers. ","distance":0.38793306932011051291198100443580187857151031494140625}],["A sum of finite numbers is still finite ",{"type":"∀ {α : Type u_1} {s : Finset α} {f : α → ENNReal}, (∀ a ∈ s, f a ≠ ⊤) → (Finset.sum s fun a => f a) < ⊤","name":"ENNReal.sum_lt_top","isProp":true,"docString":"A sum of finite numbers is still finite ","distance":0.390239129073719215323734488265472464263439178466796875}],["The empty set is meagre. ",{"type":"∀ {X : Type u_5} [inst : TopologicalSpace X], IsMeagre ∅","name":"meagre_empty","isProp":true,"docString":"The empty set is meagre. ","distance":0.39187816714094048098360190124367363750934600830078125}],["Two positive naturals are equal if their prime padic valuations are equal ",{"type":"∀ (a b : ℕ), a ≠ 0 → b ≠ 0 → (a = b ↔ ∀ (p : ℕ), Nat.Prime p → padicValNat p a = padicValNat p b)","name":"Nat.eq_iff_prime_padicValNat_eq","isProp":true,"docString":"Two positive naturals are equal if their prime padic valuations are equal ","distance":0.392080591708812431495090322641772218048572540283203125}],["Two pnats are coprime if their gcd is 1. ",{"type":"ℕ+ → ℕ+ → Prop","name":"PNat.Coprime","isProp":false,"docString":"Two pnats are coprime if their gcd is 1. ","distance":0.39372104867378687753642907409812323749065399169921875}],["The empty set is coplanar. ",{"type":"∀ (k : Type u_1) {V : Type u_2} (P : Type u_3) [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P], Coplanar k ∅","name":"coplanar_empty","isProp":true,"docString":"The empty set is coplanar. ","distance":0.39413235604903906761364851263351738452911376953125}],["Two points are coplanar. ",{"type":"∀ (k : Type u_1) {V : Type u_2} {P : Type u_3} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P] (p₁ p₂ : P), Coplanar k {p₁, p₂}","name":"coplanar_pair","isProp":true,"docString":"Two points are coplanar. ","distance":0.394256777204772312916958298956160433590412139892578125}],["The empty set is collinear. ",{"type":"∀ (k : Type u_1) {V : Type u_2} (P : Type u_3) [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P], Collinear k ∅","name":"collinear_empty","isProp":true,"docString":"The empty set is collinear. ","distance":0.39680160882949599976399213119293563067913055419921875}],["Two points are collinear. ",{"type":"∀ (k : Type u_1) {V : Type u_2} {P : Type u_3} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P] (p₁ p₂ : P), Collinear k {p₁, p₂}","name":"collinear_pair","isProp":true,"docString":"Two points are collinear. ","distance":0.39850547566096594653828333321143873035907745361328125}],["Adjacent letters are not from the same summand. ",{"type":"∀ {ι : Type u_1} {M : ι → Type u_2} [inst : (i : ι) → Monoid (M i)] (self : Monoid.CoprodI.Word M),\n  List.Chain' (fun l l' => l.fst ≠ l'.fst) self.toList","name":"Monoid.CoprodI.Word.chain_ne","isProp":true,"docString":"Adjacent letters are not from the same summand. ","distance":0.399037146923866770098499046071083284914493560791015625}],["Two natural numbers are equal if and only if they have the same divisors. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), a ∣ m ↔ a ∣ n) ↔ m = n","name":"Nat.dvd_left_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same divisors. ","distance":0.4020629049289985434967320543364621698856353759765625}],["Congruence relations are symmetric. ",{"type":"∀ {M : Type u_1} [inst : Mul M] (c : Con M) {x y : M}, c x y → c y x","name":"Con.symm","isProp":true,"docString":"Congruence relations are symmetric. ","distance":0.40308531933631996935218921862542629241943359375}],["The clifford algebra is graded by the even and odd parts. ",{"type":"{R : Type u_1} →\n  {M : Type u_2} →\n    [inst : CommRing R] →\n      [inst_1 : AddCommGroup M] →\n        [inst_2 : Module R M] → (Q : QuadraticForm R M) → GradedAlgebra (CliffordAlgebra.evenOdd Q)","name":"CliffordAlgebra.gradedAlgebra","isProp":false,"docString":"The clifford algebra is graded by the even and odd parts. ","distance":0.405124605976479867930351019822410307824611663818359375}],["The finset of those partitions in which every part is odd. ",{"type":"(n : ℕ) → Finset (Nat.Partition n)","name":"Nat.Partition.odds","isProp":false,"docString":"The finset of those partitions in which every part is odd. ","distance":0.407187036074276365038571157128899358212947845458984375}],["Pre-games defined by natural numbers are numeric. ",{"type":"∀ (n : ℕ), SetTheory.PGame.Numeric ↑n","name":"SetTheory.PGame.numeric_nat","isProp":true,"docString":"Pre-games defined by natural numbers are numeric. ","distance":0.4078374560447055596767995666596107184886932373046875}],["The shadow of the empty set is empty. ",{"type":"∀ {α : Type u_1} [inst : DecidableEq α], Finset.shadow ∅ = ∅","name":"Finset.shadow_empty","isProp":true,"docString":"The shadow of the empty set is empty. ","distance":0.409078931837987547215362837960128672420978546142578125}]]